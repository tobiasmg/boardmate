{"ast":null,"code":"var _jsxFileName = \"/Users/tgira1018/Documents/GitHub/boardmate/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { ChevronLeft, RotateCcw, Play, BookOpen, Target, Undo2 } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessTrainingApp = () => {\n  _s();\n  // Add mobile-specific CSS\n  useEffect(() => {\n    // Add mobile viewport and chess font optimization\n    const style = document.createElement('style');\n    style.textContent = `\n      .chess-piece {\n        font-family: 'Arial Unicode MS', 'Lucida Grande', 'Segoe UI Symbol', 'DejaVu Sans', Arial, sans-serif !important;\n        font-feature-settings: normal !important;\n        -webkit-font-smoothing: antialiased !important;\n        -moz-osx-font-smoothing: grayscale !important;\n        font-variant-emoji: text !important;\n        text-rendering: optimizeLegibility !important;\n        font-size: inherit !important;\n        line-height: 1 !important;\n        vertical-align: baseline !important;\n        font-weight: normal !important;\n        font-style: normal !important;\n        color: inherit !important;\n        -webkit-text-fill-color: inherit !important;\n        -webkit-text-stroke: 0 !important;\n        -webkit-font-feature-settings: normal !important;\n        font-variant: normal !important;\n      }\n\n      .chess-piece-white {\n        /* SVG styling handled in component */\n      }\n\n      .chess-piece-black {\n        /* SVG styling handled in component */\n      }\n\n      body {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -khtml-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        -webkit-tap-highlight-color: transparent;\n        overflow-x: hidden;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // Ensure viewport is set for mobile\n    let viewport = document.querySelector('meta[name=\"viewport\"]');\n    if (!viewport) {\n      viewport = document.createElement('meta');\n      viewport.name = 'viewport';\n      viewport.content = 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no';\n      document.head.appendChild(viewport);\n    }\n    return () => {\n      document.head.removeChild(style);\n    };\n  }, []);\n\n  // Initial board setup - function to always get fresh copy\n  const getInitialBoard = () => [['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'], ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'], ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']];\n\n  // State for responsive design\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  const [board, setBoard] = useState(() => getInitialBoard());\n  const [selectedSquare, setSelectedSquare] = useState(null);\n  const [currentPlayer, setCurrentPlayer] = useState('white');\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [gameMode, setGameMode] = useState('menu');\n  const [trainingMode, setTrainingMode] = useState(null);\n  const [feedback, setFeedback] = useState('');\n  const [score, setScore] = useState({\n    correct: 0,\n    total: 0\n  });\n  const [draggedPiece, setDraggedPiece] = useState(null);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [showHint, setShowHint] = useState(null);\n  const [needsReplay, setNeedsReplay] = useState(false);\n\n  // Undo functionality - minimal addition\n  const [undoStack, setUndoStack] = useState([]);\n\n  // Add timeout refs for cleanup\n  const timeoutRefs = useRef([]);\n  const clearAllTimeouts = () => {\n    timeoutRefs.current.forEach(clearTimeout);\n    timeoutRefs.current = [];\n  };\n  const addTimeout = (callback, delay) => {\n    const timeoutId = setTimeout(() => {\n      callback();\n      timeoutRefs.current = timeoutRefs.current.filter(id => id !== timeoutId);\n    }, delay);\n    timeoutRefs.current.push(timeoutId);\n    return timeoutId;\n  };\n\n  // Opening databases\n  const openingDatabases = {\n    sicilianDragon: {\n      name: \"Sicilian Defence - Accelerated Dragon\",\n      color: \"black\",\n      moves: {\n        \"\": [\"e2-e4\"],\n        \"e2-e4\": [\"c7-c5\"],\n        \"e2-e4,c7-c5\": [\"g1-f3\"],\n        \"e2-e4,c7-c5,g1-f3\": [\"g7-g6\"],\n        \"e2-e4,c7-c5,g1-f3,g7-g6\": [\"d2-d4\"],\n        \"e2-e4,c7-c5,g1-f3,g7-g6,d2-d4\": [\"c5-d4\"],\n        \"e2-e4,c7-c5,g1-f3,g7-g6,d2-d4,c5-d4\": [\"f3-d4\"],\n        \"e2-e4,c7-c5,g1-f3,g7-g6,d2-d4,c5-d4,f3-d4\": [\"f8-g7\"],\n        \"e2-e4,c7-c5,g1-f3,g7-g6,d2-d4,c5-d4,f3-d4,f8-g7\": [\"c2-c4\", \"b1-c3\", \"f2-f3\"],\n        \"e2-e4,c7-c5,g1-f3,g7-g6,d2-d4,c5-d4,f3-d4,f8-g7,c2-c4\": [\"b8-c6\"],\n        \"e2-e4,c7-c5,g1-f3,g7-g6,d2-d4,c5-d4,f3-d4,f8-g7,b1-c3\": [\"b8-c6\"]\n      }\n    },\n    scotchGame: {\n      name: \"Scotch Game\",\n      color: \"white\",\n      moves: {\n        \"\": [\"e2-e4\"],\n        \"e2-e4\": [\"e7-e5\"],\n        \"e2-e4,e7-e5\": [\"g1-f3\"],\n        \"e2-e4,e7-e5,g1-f3\": [\"b8-c6\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6\": [\"d2-d4\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4\": [\"e5-d4\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4,e5-d4\": [\"f3-d4\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4,e5-d4,f3-d4\": [\"f8-c5\", \"g8-f6\", \"d8-h4\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4,e5-d4,f3-d4,f8-c5\": [\"d4-b5\", \"d4-c6\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4,e5-d4,f3-d4,g8-f6\": [\"d4-c6\", \"b1-c3\"]\n      }\n    },\n    scotchGambit: {\n      name: \"Scotch Gambit\",\n      color: \"white\",\n      moves: {\n        \"\": [\"e2-e4\"],\n        \"e2-e4\": [\"e7-e5\"],\n        \"e2-e4,e7-e5\": [\"g1-f3\"],\n        \"e2-e4,e7-e5,g1-f3\": [\"b8-c6\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6\": [\"d2-d4\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4\": [\"e5-d4\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4,e5-d4\": [\"f1-c4\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4,e5-d4,f1-c4\": [\"f8-c5\", \"g8-f6\", \"f7-f5\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4,e5-d4,f1-c4,f8-c5\": [\"c2-c3\", \"e1-g1\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4,e5-d4,f1-c4,g8-f6\": [\"e4-e5\", \"c2-c3\"]\n      }\n    }\n  };\n\n  // SVG piece components - using inline SVG for consistent rendering\n  const getPieceSVG = piece => {\n    const isWhite = isPieceWhite(piece);\n    const pieceType = piece.toLowerCase();\n    const kingSVG = /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 2048 2048\",\n      width: \"100%\",\n      height: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        fill: isWhite ? \"#f9f9f9\" : \"#101010\",\n        d: \"m501.6 1811 48.4-354.4-260-269.2s-166.4-288.2 29.9-481C582.2 448.7 826 727.2 826 727.2l195.6-165.7 184 165.7s216.4-232.5 430.4-76c214 156.5 255.4 317.6 117.4 531.6-138.1 214-250.9 280.7-250.9 280.7L1558 1811z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        fill: isWhite ? \"#101010\" : \"#f9f9f9\",\n        d: \"M977 298v-95h94v95h107v95h-107v153q-48-16-94 0V393H870v-95zm47 314q-47 0-136 121-31-36-50-55 93-140 186-140 92 0 186 140-20 19-50 55-90-121-136-121zm-447 907-26 156 145-84zm410-206q-1-147-36.5-274.5T870 845q-45-88-131.5-153T570 627q-103 0-208 93T257 949q0 109 86.5 236T546 1408q212-88 441-95zm37 530H448l61-365q-325-280-326-535-1-159 125-274.5T575 553q78 0 158.5 47T876 719q61 74 98.5 164.5T1024 1034q12-60 49-150.5t99-164.5q61-72 142-119t159-47q140 0 266 115.5T1865 943q-2 255-326 535l61 365zm0-74h489l-50-298q-216-84-439-84t-439 84l-50 298zm447-250 26 156-145-84zm-410-206q229 7 441 95 115-96 202-223t87-236q0-136-105.5-229T1478 627q-83 0-169.5 65T1178 845q-46 66-81.5 193.5T1061 1313zm-176 233 141-84 137 86-141 84z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n    const queenSVG = /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 2048 2048\",\n      width: \"100%\",\n      height: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        fill: isWhite ? \"#f9f9f9\" : \"#101010\",\n        d: \"m508.5 1815.6 48.4-356.7-216.3-554.6-135.8-20.7-16.1-126.5 112.7-43.8 78.3 73.7-18.4 99 246.2 197.8 112.8-568.3L635 428l78.3-108 112.8 43.7-23 161 223.2 474 244-490-66.8-105.9 92-92 105.9 73.6L1337 534l103.5 529.2 260-161-16-142.7 131-46 57.6 131.1-207 103.6-175 529.2 48.4 308.4z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        fill: isWhite ? \"#101010\" : \"#f9f9f9\",\n        d: \"M1024 1769h478q-53-130-43-280-100-39-213-67.5t-222-28.5q-110 0-223 28.5T589 1489q9 150-43 280zm0-450q111 0 223.5 26.5T1468 1413q17-105 60.5-212.5T1634 988l-220 155-123-601-267 555-267-555-123 601-220-155q61 105 104.5 212.5T580 1413q108-41 220.5-67.5T1024 1319zm0 524H441q114-231 57.5-456.5T296 937q-12 2-19 2-54 0-92.5-38.5T146 808t38.5-92.5T277 677t92.5 38.5T408 808q0 20-6 38-4 14-15 33l196 139 100-486q-64-31-72-103-5-44 29-91t88-53q54-5 96 29t48 88q7 68-46 114l198 412 198-412q-54-46-46-114 6-54 48-88t96-29q54 6 87.5 53t29.5 91q-9 72-72 103l100 486 196-139q-12-19-15-33-6-18-6-38 0-54 38.5-92.5T1771 677t92.5 38.5T1902 808t-38.5 92.5T1771 939q-7 0-19-2-147 224-203 449.5t58 456.5zM276 746q-62 0-62 62t62 62q63 0 63-62t-63-62zm466-394q-62 0-62 62t62 62 62-62-62-62zM590 1519l119 72-134 86q19-86 15-158zm1182-773q-63 0-63 62t63 62q62 0 62-62t-62-62zm-466-394q-62 0-62 62t62 62 62-62-62-62zm152 1167-119 72 134 86q-20-86-15-158zm-573 47 139-83 139 86-139 84z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this);\n    const rookSVG = /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 2048 2048\",\n      width: \"100%\",\n      height: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        fill: isWhite ? \"#f9f9f9\" : \"#101010\",\n        d: \"m435 1804 16-212 152-115 51-688-148-115-7-276 210-2 4 138 198 2 7-140 212-3 14 145 193-4 5-138h204l-7 285-145 106 42 693 172 124 19 207z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        fill: isWhite ? \"#101010\" : \"#f9f9f9\",\n        d: \"M1024 1501H643l5-74h752l5 74zm0-661H692l5-74h654l5 74zm0 1003H383l29-264 159-118 50-659-149-107-17-341h289v147h137V354h286v147h137V354h289l-17 341-149 107 50 659 159 118 29 264zm0-74h557l-15-149-161-119-54-735 152-109 13-230h-138v148h-285V427H955v148H670V427H532l13 230 152 109-54 735-161 119-15 149z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this);\n    const bishopSVG = /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 2048 2048\",\n      width: \"100%\",\n      height: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        fill: isWhite ? \"#f9f9f9\" : \"#101010\",\n        d: \"m948 366 1-139 148-7 1 147zM564 860c114-267 456-443 456-443s392 176 476 502c-9 209-183 332-183 332l27 221-653 6 46-233s-230-171-169-385zm-101 790c175 6 355 23 425-142h92s0 190-88 246c-163 103-625 38-625 38s-15-146 196-142zm631 37-36-185 102 5s22 153 315 131c381-17 318 153 318 153l-483 5z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        fill: isWhite ? \"#101010\" : \"#f9f9f9\",\n        d: \"M1024 356q66 0 64-66 1-55-64-55-66 0-64 55-3 66 64 66zm0 1204q0 114-101 199t-223 84H205q0-117 65-179t142-62h250q51 0 88-7t71-60l10-16h76q-7 21-3 13-45 105-109 125t-146 19H409q-52 0-86 40t-34 53h424q66 0 159-65t93-185H624q67-116 72-229-114-119-162-223t-6-224q33-96 118-189t312-247q-17-11-46-36t-29-79q0-58 41-96t100-38q58 0 100 38t41 96q0 54-29 79t-46 36q226 153 311 247t119 189q42 119-6 224t-162 223q4 113 72 229h-341q0 120 93 185t159 65h424q0-13-34-53t-86-40h-240q-83 0-146-19t-109-125q4 8-3-13h76l10 16q33 53 70 60t89 7h250q76 0 142 62t65 179h-495q-123 0-223-84t-101-199zm0-114h283q-28-84-29-154-120-41-254-38-135-3-254 38-2 70-29 154zm0-267q159-1 285 42 189-180 142-346-60-193-427-431-368 238-427 431-48 166 142 346 125-43 285-42zm-47-361V714h94v104h95v89h-95v165h-94V907h-95v-89z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this);\n    const knightSVG = /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 2048 2048\",\n      width: \"100%\",\n      height: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        fill: isWhite ? \"#f9f9f9\" : \"#101010\",\n        d: \"m352 861 787-569 94 148s336 103 398 388c63 286 51 974 51 974l-1088 9s-37-290 184-460c221-171 221-212 221-212s-226-71-295-16-117 138-117 138l-129-67 74-85-88-97-94 56z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        fill: isWhite ? \"#101010\" : \"#f9f9f9\",\n        d: \"m1151 178-115 154c-74 50-147 98-220 144-73 45-112 81-116 107L304 846l12 297 122-86 51 50-115 82 217 121 56-102c37-68 135-88 292-60l-55 85c-25 37-63 60-115 71a608 608 0 0 0-183 238c-32 82-45 182-39 301h1242c-23-55-42-118-57-190-15-73-17-152-5-237 29-239 13-440-47-603-61-164-205-303-433-418l-96-217zm-17 145 59 133a664 664 0 0 1 262 188c55 72 100 150 134 234 27 97 40 181 41 253 0 71-3 140-9 205-7 65-11 131-13 199-2 67 9 145 32 234H621c-4-84 12-158 48-223s85-124 146-177c78-22 129-56 152-102s53-90 90-131c13-10 27-15 38-15 10-1 21 0 33-2 52-7 95-36 129-85 33-49 51-104 52-165l-19-67c-37 159-99 245-188 257l-45 6c-16 1-33 10-52 26-41-25-87-35-138-31-74 6-129 15-165 27l-108 73-39 45-47-28 78-65-138-144-64 41-4-125 366-241c15-34 58-74 131-120l208-131 49-69zM960 564c-6 0-12 2-18 7L826 671l212 2c23 0 17-21-16-63-24-31-44-46-62-46zM502 868l-33 4-33 56 57 26 46-55-37-31z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this);\n    const pawnSVG = /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 2048 2048\",\n      width: \"100%\",\n      height: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        fill: isWhite ? \"#f9f9f9\" : \"#101010\",\n        d: \"m734 981 196-193s-189-82-79-288c79-149 303-114 361 50 63 179-113 240-113 240l226 197Zm-235 799s-8-107 50-154c196-173 338-386 371-599l210 2c33 206 182 447 321 561 101 59 99 199 99 199z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        fill: isWhite ? \"#101010\" : \"#f9f9f9\",\n        d: \"M520 1769h1008q8-97-132-182-132-101-196-239t-80-309H928q-15 170-79 309t-197 239q-141 85-132 182zm504 74H446v-74q-4-80 42-137t125-108q117-91 172-217t78-268H576l284-239q-86-74-86-188 0-103 73-177t177-74q103 0 177 74t73 177q0 114-86 188l284 239h-287q23 141 78 268t172 217q79 51 125 108t42 137v74zM756 974h536l-225-191q134-31 134-171 0-76-52-126t-125-51q-73 0-125 51t-52 126q0 140 134 171z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this);\n\n    // Return the appropriate SVG based on piece type\n    switch (pieceType) {\n      case 'k':\n        return kingSVG;\n      case 'q':\n        return queenSVG;\n      case 'r':\n        return rookSVG;\n      // ← Now returns rook instead of king\n      case 'b':\n        return bishopSVG;\n      // ← Now returns bishop instead of king\n      case 'n':\n        return knightSVG;\n      // ← Now returns knight instead of king\n      case 'p':\n        return pawnSVG;\n      // ← Now returns pawn instead of king\n      default:\n        return kingSVG;\n    }\n  };\n\n  // Helper function to get display coordinates (flipped for black)\n  const getDisplayCoordinates = (row, col) => {\n    var _openingDatabases$tra;\n    if (trainingMode && ((_openingDatabases$tra = openingDatabases[trainingMode]) === null || _openingDatabases$tra === void 0 ? void 0 : _openingDatabases$tra.color) === 'black') {\n      // Flip the board when playing as black\n      return [7 - row, 7 - col];\n    }\n    return [row, col];\n  };\n\n  // Helper functions\n  const getSquareName = (row, col) => {\n    return String.fromCharCode(97 + col) + (8 - row);\n  };\n  const parseSquareName = square => {\n    const col = square.charCodeAt(0) - 97;\n    const row = 8 - parseInt(square[1]);\n    return [row, col];\n  };\n  const isPieceWhite = piece => piece && piece === piece.toUpperCase();\n  const isValidMove = (fromRow, fromCol, toRow, toCol, piece) => {\n    if (toRow < 0 || toRow >= 8 || toCol < 0 || toCol >= 8) return false;\n    const targetPiece = board[toRow][toCol];\n    if (targetPiece && isPieceWhite(piece) === isPieceWhite(targetPiece)) return false;\n    const rowDiff = Math.abs(toRow - fromRow);\n    const colDiff = Math.abs(toCol - fromCol);\n    const piece_type = piece.toLowerCase();\n    switch (piece_type) {\n      case 'p':\n        const direction = isPieceWhite(piece) ? -1 : 1;\n        const startRow = isPieceWhite(piece) ? 6 : 1;\n        if (toCol === fromCol) {\n          if (toRow === fromRow + direction && !targetPiece) return true;\n          if (fromRow === startRow && toRow === fromRow + 2 * direction && !targetPiece) return true;\n        } else if (Math.abs(toCol - fromCol) === 1 && toRow === fromRow + direction) {\n          return !!targetPiece;\n        }\n        return false;\n      case 'r':\n        return (rowDiff === 0 || colDiff === 0) && !isPathBlocked(fromRow, fromCol, toRow, toCol);\n      case 'n':\n        return rowDiff === 2 && colDiff === 1 || rowDiff === 1 && colDiff === 2;\n      case 'b':\n        return rowDiff === colDiff && !isPathBlocked(fromRow, fromCol, toRow, toCol);\n      case 'q':\n        return (rowDiff === 0 || colDiff === 0 || rowDiff === colDiff) && !isPathBlocked(fromRow, fromCol, toRow, toCol);\n      case 'k':\n        return rowDiff <= 1 && colDiff <= 1;\n      default:\n        return false;\n    }\n  };\n  const isPathBlocked = (fromRow, fromCol, toRow, toCol) => {\n    const rowDir = toRow > fromRow ? 1 : toRow < fromRow ? -1 : 0;\n    const colDir = toCol > fromCol ? 1 : toCol < fromCol ? -1 : 0;\n    let currentRow = fromRow + rowDir;\n    let currentCol = fromCol + colDir;\n    while (currentRow !== toRow || currentCol !== toCol) {\n      if (board[currentRow][currentCol]) return true;\n      currentRow += rowDir;\n      currentCol += colDir;\n    }\n    return false;\n  };\n  const makeMove = (fromRow, fromCol, toRow, toCol) => {\n    const newBoard = board.map(row => [...row]);\n    const piece = newBoard[fromRow][fromCol];\n    console.log(`Making move: ${getSquareName(fromRow, fromCol)}-${getSquareName(toRow, toCol)} (${piece})`);\n    newBoard[toRow][toCol] = piece;\n    newBoard[fromRow][fromCol] = null;\n    const moveNotation = `${getSquareName(fromRow, fromCol)}-${getSquareName(toRow, toCol)}`;\n    const updatedMoveHistory = [...moveHistory, moveNotation];\n    setBoard(newBoard);\n    setMoveHistory(updatedMoveHistory);\n    setCurrentPlayer(prevPlayer => prevPlayer === 'white' ? 'black' : 'white');\n    console.log('Updated move history:', updatedMoveHistory);\n    return {\n      moveNotation,\n      updatedMoveHistory\n    };\n  };\n  const makeOpponentMove = currentMoveHistory => {\n    console.log('makeOpponentMove called');\n    console.log('Current moveHistory when making opponent move:', currentMoveHistory);\n    const opening = openingDatabases[trainingMode];\n    const nextMoveKey = currentMoveHistory.join(',');\n    const opponentMoves = opening.moves[nextMoveKey];\n    console.log('Looking for opponent move with key:', `\"${nextMoveKey}\"`);\n    console.log('Available moves for this key:', opponentMoves);\n    if (opponentMoves && opponentMoves.length > 0) {\n      // Wait a bit to simulate thinking time\n      addTimeout(() => {\n        const opponentMove = opponentMoves[Math.floor(Math.random() * opponentMoves.length)];\n        console.log('Selected opponent move:', opponentMove);\n        const [fromSquare, toSquare] = opponentMove.split('-');\n        const [fromRow, fromCol] = parseSquareName(fromSquare);\n        const [toRow, toCol] = parseSquareName(toSquare);\n        console.log(`Opponent moving from ${fromSquare} to ${toSquare}`);\n\n        // Make the opponent move with a single state update\n        setBoard(currentBoard => {\n          const newBoard = currentBoard.map(row => [...row]);\n          const piece = newBoard[fromRow][fromCol];\n          console.log(`Making opponent move: ${getSquareName(fromRow, fromCol)}-${getSquareName(toRow, toCol)} (${piece})`);\n          newBoard[toRow][toCol] = piece;\n          newBoard[fromRow][fromCol] = null;\n          return newBoard;\n        });\n        const moveNotation = `${getSquareName(fromRow, fromCol)}-${getSquareName(toRow, toCol)}`;\n        setMoveHistory(prevHistory => {\n          const updatedHistory = [...prevHistory, moveNotation];\n          console.log('Updated move history after opponent move:', updatedHistory);\n          return updatedHistory;\n        });\n        setCurrentPlayer(prevPlayer => prevPlayer === 'white' ? 'black' : 'white');\n        setFeedback('Your turn!');\n      }, 800);\n    } else {\n      console.log('No opponent moves found for key:', `\"${nextMoveKey}\"`);\n      setFeedback('End of opening line - great job!');\n    }\n  };\n  const undoLastMove = () => {\n    if (undoStack.length === 0) return;\n    const lastState = undoStack[undoStack.length - 1];\n\n    // Clear timeouts to prevent conflicts\n    clearAllTimeouts();\n\n    // Restore the previous state\n    setBoard(lastState.board);\n    setMoveHistory(lastState.moveHistory);\n    setCurrentPlayer(lastState.currentPlayer);\n    setScore(lastState.score);\n    setShowHint(lastState.showHint);\n    setNeedsReplay(lastState.needsReplay);\n\n    // Remove the last state from history\n    setUndoStack(prevStack => prevStack.slice(0, -1));\n    setFeedback('Move undone. Try again!');\n    setSelectedSquare(null);\n    setDraggedPiece(null);\n\n    // Clear feedback after a moment\n    addTimeout(() => {\n      setFeedback('');\n    }, 2000);\n  };\n  const checkMove = (userMove, currentMoveHistory) => {\n    const opening = openingDatabases[trainingMode];\n    // Use the moveHistory that was passed in, excluding the user's move we just made\n    const moveKey = currentMoveHistory.slice(0, -1).join(',');\n    const expectedMoves = opening.moves[moveKey] || [];\n    console.log('Checking user move:', userMove);\n    console.log('Current move history:', currentMoveHistory);\n    console.log('Move key for lookup:', `\"${moveKey}\"`);\n    console.log('Expected moves:', expectedMoves);\n    console.log('Available keys in database:', Object.keys(opening.moves));\n    console.log('Move is correct?', expectedMoves.includes(userMove));\n\n    // Clear any existing hints\n    setShowHint(null);\n    setNeedsReplay(false);\n    if (expectedMoves.includes(userMove)) {\n      setFeedback('✓ Correct move!');\n      setScore(prev => ({\n        correct: prev.correct + 1,\n        total: prev.total + 1\n      }));\n      console.log('Move was correct, calling makeOpponentMove...');\n\n      // Wait for move to be processed, then make opponent move\n      addTimeout(() => {\n        setFeedback('Opponent is thinking...');\n        // Wait a bit more for React state to update, then pass the current move history\n        addTimeout(() => {\n          makeOpponentMove(currentMoveHistory);\n        }, 300);\n      }, 500);\n    } else {\n      console.log('Move was incorrect, NOT calling makeOpponentMove');\n\n      // Save state for undo ONLY when user makes wrong move\n      setUndoStack(prevStack => [...prevStack, {\n        board: board.map(row => [...row]),\n        moveHistory: [...moveHistory],\n        currentPlayer,\n        score: {\n          ...score\n        },\n        showHint: null,\n        needsReplay: false\n      }]);\n\n      // Better error handling for empty expected moves\n      const expectedMovesText = expectedMoves.length > 0 ? expectedMoves.join(' or ') : 'No valid moves found';\n      setFeedback(`✗ Wrong move! Expected: ${expectedMovesText}. Click \"Undo\" to try again.`);\n      setScore(prev => ({\n        correct: prev.correct,\n        total: prev.total + 1\n      }));\n      setNeedsReplay(true);\n\n      // Show hint arrow for the best move only if we have expected moves\n      if (expectedMoves.length > 0) {\n        const bestMove = expectedMoves[0];\n        const [fromSquare, toSquare] = bestMove.split('-');\n        const [fromRow, fromCol] = parseSquareName(fromSquare);\n        const [toRow, toCol] = parseSquareName(toSquare);\n\n        // Convert to display coordinates\n        const [fromDisplayRow, fromDisplayCol] = getDisplayCoordinates(fromRow, fromCol);\n        const [toDisplayRow, toDisplayCol] = getDisplayCoordinates(toRow, toCol);\n        setShowHint({\n          from: {\n            row: fromDisplayRow,\n            col: fromDisplayCol\n          },\n          to: {\n            row: toDisplayRow,\n            col: toDisplayCol\n          },\n          notation: bestMove\n        });\n        console.log('Setting hint arrow:', {\n          from: {\n            row: fromDisplayRow,\n            col: fromDisplayCol\n          },\n          to: {\n            row: toDisplayRow,\n            col: toDisplayCol\n          },\n          notation: bestMove\n        });\n      } else {\n        console.log('No expected moves found - cannot show hint arrow');\n      }\n\n      // Clear feedback after longer delay to give user time to see the hint\n      addTimeout(() => {\n        setFeedback('');\n        setShowHint(null);\n        setNeedsReplay(false);\n      }, 5000);\n    }\n  };\n  const handleMouseDown = (e, displayRow, displayCol) => {\n    var _openingDatabases$tra2, _e$touches$, _e$touches$2;\n    if (gameMode !== 'training') return;\n\n    // Convert display coordinates to actual board coordinates\n    let row, col;\n    if (trainingMode && ((_openingDatabases$tra2 = openingDatabases[trainingMode]) === null || _openingDatabases$tra2 === void 0 ? void 0 : _openingDatabases$tra2.color) === 'black') {\n      row = 7 - displayRow;\n      col = 7 - displayCol;\n    } else {\n      row = displayRow;\n      col = displayCol;\n    }\n    const opening = openingDatabases[trainingMode];\n    const piece = board[row][col];\n\n    // Check if it's the user's turn and they're clicking their piece\n    const isUserTurn = opening.color === 'white' && currentPlayer === 'white' || opening.color === 'black' && currentPlayer === 'black';\n    if (!isUserTurn || !piece || isPieceWhite(piece) !== (currentPlayer === 'white')) {\n      return;\n    }\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    const clientX = e.clientX || e.touches && ((_e$touches$ = e.touches[0]) === null || _e$touches$ === void 0 ? void 0 : _e$touches$.clientX) || 0;\n    const clientY = e.clientY || e.touches && ((_e$touches$2 = e.touches[0]) === null || _e$touches$2 === void 0 ? void 0 : _e$touches$2.clientY) || 0;\n    setDraggedPiece({\n      piece,\n      fromRow: row,\n      fromCol: col,\n      displayRow,\n      displayCol\n    });\n    setDragOffset({\n      x: clientX - rect.left - rect.width / 2,\n      y: clientY - rect.top - rect.height / 2\n    });\n    setSelectedSquare([row, col]);\n  };\n  const handleTouchStart = (e, displayRow, displayCol) => {\n    e.preventDefault(); // Prevent scrolling\n    handleMouseDown(e, displayRow, displayCol);\n  };\n  const handleMouseMove = e => {\n    if (!draggedPiece) return;\n    e.preventDefault();\n  };\n  const handleTouchMove = e => {\n    if (!draggedPiece) return;\n    e.preventDefault(); // Prevent scrolling\n    handleMouseMove(e);\n  };\n  const handleMouseUp = (e, targetDisplayRow, targetDisplayCol) => {\n    var _openingDatabases$tra3;\n    if (!draggedPiece) return;\n    e.preventDefault();\n\n    // Convert target display coordinates to actual board coordinates\n    let targetRow, targetCol;\n    if (trainingMode && ((_openingDatabases$tra3 = openingDatabases[trainingMode]) === null || _openingDatabases$tra3 === void 0 ? void 0 : _openingDatabases$tra3.color) === 'black') {\n      targetRow = 7 - targetDisplayRow;\n      targetCol = 7 - targetDisplayCol;\n    } else {\n      targetRow = targetDisplayRow;\n      targetCol = targetDisplayCol;\n    }\n    const {\n      fromRow,\n      fromCol\n    } = draggedPiece;\n    if (isValidMove(fromRow, fromCol, targetRow, targetCol, draggedPiece.piece)) {\n      const {\n        moveNotation,\n        updatedMoveHistory\n      } = makeMove(fromRow, fromCol, targetRow, targetCol);\n      checkMove(moveNotation, updatedMoveHistory);\n    }\n    setDraggedPiece(null);\n    setSelectedSquare(null);\n  };\n  const handleTouchEnd = (e, targetDisplayRow, targetDisplayCol) => {\n    if (!draggedPiece) return;\n    e.preventDefault();\n\n    // For touch, we need to find what element we're over\n    if (e.changedTouches && e.changedTouches[0]) {\n      var _targetElement$datase2;\n      const touch = e.changedTouches[0];\n      const elementBelow = document.elementFromPoint(touch.clientX, touch.clientY);\n\n      // Find the chess square element\n      let targetElement = elementBelow;\n      while (targetElement && !((_targetElement$datase = targetElement.dataset) !== null && _targetElement$datase !== void 0 && _targetElement$datase.square)) {\n        var _targetElement$datase;\n        targetElement = targetElement.parentElement;\n      }\n      if (targetElement && (_targetElement$datase2 = targetElement.dataset) !== null && _targetElement$datase2 !== void 0 && _targetElement$datase2.square) {\n        const [touchRow, touchCol] = targetElement.dataset.square.split(',').map(Number);\n        handleMouseUp(e, touchRow, touchCol);\n        return;\n      }\n    }\n\n    // Fallback to provided coordinates\n    handleMouseUp(e, targetDisplayRow, targetDisplayCol);\n  };\n  const handleSquareClick = (displayRow, displayCol) => {\n    var _openingDatabases$tra4;\n    if (draggedPiece) return; // Ignore clicks during drag\n\n    if (gameMode !== 'training') return;\n\n    // Convert display coordinates to actual board coordinates\n    let row, col;\n    if (trainingMode && ((_openingDatabases$tra4 = openingDatabases[trainingMode]) === null || _openingDatabases$tra4 === void 0 ? void 0 : _openingDatabases$tra4.color) === 'black') {\n      row = 7 - displayRow;\n      col = 7 - displayCol;\n    } else {\n      row = displayRow;\n      col = displayCol;\n    }\n    const opening = openingDatabases[trainingMode];\n    const piece = board[row][col];\n\n    // Check if it's the user's turn\n    const isUserTurn = opening.color === 'white' && currentPlayer === 'white' || opening.color === 'black' && currentPlayer === 'black';\n    if (!isUserTurn) {\n      setFeedback('Wait for opponent to move...');\n      addTimeout(() => setFeedback(''), 1000);\n      return;\n    }\n    if (selectedSquare) {\n      const [fromRow, fromCol] = selectedSquare;\n      const fromPiece = board[fromRow][fromCol];\n      if (row === fromRow && col === fromCol) {\n        setSelectedSquare(null);\n        return;\n      }\n      if (isValidMove(fromRow, fromCol, row, col, fromPiece)) {\n        const {\n          moveNotation,\n          updatedMoveHistory\n        } = makeMove(fromRow, fromCol, row, col);\n        checkMove(moveNotation, updatedMoveHistory);\n        setSelectedSquare(null);\n      } else {\n        setSelectedSquare(piece && isPieceWhite(piece) === (currentPlayer === 'white') ? [row, col] : null);\n      }\n    } else {\n      if (piece && isPieceWhite(piece) === (currentPlayer === 'white')) {\n        setSelectedSquare([row, col]);\n      }\n    }\n  };\n  const startTraining = mode => {\n    console.log('Starting training for mode:', mode);\n\n    // Clear any existing timeouts\n    clearAllTimeouts();\n    const freshBoard = getInitialBoard();\n    console.log('Starting with fresh board:', freshBoard);\n\n    // Reset all state immediately\n    setTrainingMode(mode);\n    setGameMode('training');\n    setBoard(freshBoard);\n    setMoveHistory([]);\n    setSelectedSquare(null);\n    setFeedback('');\n    setScore({\n      correct: 0,\n      total: 0\n    });\n    setDraggedPiece(null);\n    setShowHint(null);\n    setNeedsReplay(false);\n    setUndoStack([]);\n\n    // Set the correct starting player based on opening\n    const opening = openingDatabases[mode];\n    if (opening.color === 'black') {\n      // If training as black, white moves first\n      console.log('Training as black - white will move first');\n      setCurrentPlayer('white');\n      setFeedback('White is making the first move...');\n\n      // Make the first white move automatically after a short delay\n      addTimeout(() => {\n        console.log('Making automatic first white move');\n        const firstMove = opening.moves[\"\"][0]; // Should be \"e2-e4\"\n        console.log('First move from database:', firstMove);\n        if (firstMove) {\n          const [fromSquare, toSquare] = firstMove.split('-');\n          const [fromRow, fromCol] = parseSquareName(fromSquare);\n          const [toRow, toCol] = parseSquareName(toSquare);\n          console.log(`Making first move: ${fromSquare} to ${toSquare}`);\n\n          // Make the move directly to avoid state timing issues\n          setBoard(currentBoard => {\n            const newBoard = currentBoard.map(row => [...row]);\n            const piece = newBoard[fromRow][fromCol];\n            newBoard[toRow][toCol] = piece;\n            newBoard[fromRow][fromCol] = null;\n            return newBoard;\n          });\n          setMoveHistory([`${fromSquare}-${toSquare}`]);\n          setCurrentPlayer('black');\n          setFeedback('Your turn! Play 1...c5 for the Sicilian Defense.');\n        }\n      }, 1000);\n    } else {\n      // If training as white, user moves first\n      console.log('Training as white - you move first');\n      setCurrentPlayer('white');\n      setFeedback('Your turn! Make your opening move.');\n    }\n  };\n  const resetGame = () => {\n    console.log('Resetting game');\n\n    // Clear all pending timeouts first\n    clearAllTimeouts();\n\n    // Force immediate state reset with fresh board\n    const freshBoard = getInitialBoard();\n    console.log('Resetting board to:', freshBoard);\n\n    // Reset all state at once\n    setBoard(freshBoard);\n    setMoveHistory([]);\n    setSelectedSquare(null);\n    setFeedback('');\n    setDraggedPiece(null);\n    setShowHint(null);\n    setNeedsReplay(false);\n    setUndoStack([]);\n    setScore({\n      correct: 0,\n      total: 0\n    });\n\n    // Restart the training mode\n    const opening = openingDatabases[trainingMode];\n    if (opening.color === 'black') {\n      setCurrentPlayer('white');\n      setFeedback('White is making the first move...');\n\n      // Make the first white move automatically after reset\n      addTimeout(() => {\n        const firstMove = opening.moves[\"\"][0]; // Should be \"e2-e4\"\n\n        if (firstMove) {\n          const [fromSquare, toSquare] = firstMove.split('-');\n          const [fromRow, fromCol] = parseSquareName(fromSquare);\n          const [toRow, toCol] = parseSquareName(toSquare);\n          console.log(`Reset: Making first move ${fromSquare} to ${toSquare}`);\n\n          // Make the move directly without using makeMove to avoid moveHistory issues\n          setBoard(currentBoard => {\n            const newBoard = currentBoard.map(row => [...row]);\n            const piece = newBoard[fromRow][fromCol];\n            newBoard[toRow][toCol] = piece;\n            newBoard[fromRow][fromCol] = null;\n            return newBoard;\n          });\n          setMoveHistory([`${fromSquare}-${toSquare}`]);\n          setCurrentPlayer('black');\n          setFeedback('Your turn! Play 1...c5 for the Sicilian Defense.');\n        }\n      }, 1000);\n    } else {\n      setCurrentPlayer('white');\n      setFeedback('Your turn! Make your opening move.');\n    }\n  };\n  const backToMenu = () => {\n    clearAllTimeouts();\n    setGameMode('menu');\n    setTrainingMode(null);\n    setBoard(getInitialBoard()); // Reset board when going back to menu\n    setMoveHistory([]);\n    setScore({\n      correct: 0,\n      total: 0\n    });\n    setUndoStack([]);\n  };\n\n  // Handle global mouse events for drag and drop\n  useEffect(() => {\n    const handleGlobalMouseMove = e => {\n      if (draggedPiece) {\n        var _e$touches$3, _e$touches$4;\n        const clientX = e.clientX || e.touches && ((_e$touches$3 = e.touches[0]) === null || _e$touches$3 === void 0 ? void 0 : _e$touches$3.clientX) || 0;\n        const clientY = e.clientY || e.touches && ((_e$touches$4 = e.touches[0]) === null || _e$touches$4 === void 0 ? void 0 : _e$touches$4.clientY) || 0;\n        setDragOffset({\n          x: clientX,\n          y: clientY\n        });\n      }\n    };\n    const handleGlobalTouchMove = e => {\n      if (draggedPiece && e.touches && e.touches[0]) {\n        e.preventDefault(); // Prevent scrolling while dragging\n        setDragOffset({\n          x: e.touches[0].clientX,\n          y: e.touches[0].clientY\n        });\n      }\n    };\n    const handleGlobalMouseUp = () => {\n      if (draggedPiece) {\n        setDraggedPiece(null);\n        setSelectedSquare(null);\n      }\n    };\n    const handleGlobalTouchEnd = () => {\n      if (draggedPiece) {\n        setDraggedPiece(null);\n        setSelectedSquare(null);\n      }\n    };\n\n    // Mouse events\n    document.addEventListener('mousemove', handleGlobalMouseMove);\n    document.addEventListener('mouseup', handleGlobalMouseUp);\n\n    // Touch events\n    document.addEventListener('touchmove', handleGlobalTouchMove, {\n      passive: false\n    });\n    document.addEventListener('touchend', handleGlobalTouchEnd);\n    return () => {\n      document.removeEventListener('mousemove', handleGlobalMouseMove);\n      document.removeEventListener('mouseup', handleGlobalMouseUp);\n      document.removeEventListener('touchmove', handleGlobalTouchMove);\n      document.removeEventListener('touchend', handleGlobalTouchEnd);\n    };\n  }, [draggedPiece]);\n\n  // Cleanup timeouts on unmount\n  useEffect(() => {\n    return () => {\n      clearAllTimeouts();\n    };\n  }, []);\n\n  // Styles\n  const styles = {\n    container: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #fef7cd 0%, #fed7aa 100%)',\n      padding: '20px',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", sans-serif'\n    },\n    wrapper: {\n      maxWidth: '1200px',\n      margin: '0 auto'\n    },\n    header: {\n      textAlign: 'center',\n      marginBottom: '40px'\n    },\n    title: {\n      fontSize: '2.5rem',\n      color: '#92400e',\n      marginBottom: '10px',\n      fontWeight: 'bold'\n    },\n    subtitle: {\n      color: '#a16207',\n      fontSize: '1.1rem'\n    },\n    grid: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\n      gap: '30px',\n      marginBottom: '40px'\n    },\n    card: {\n      background: 'white',\n      borderRadius: '12px',\n      padding: '30px',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      cursor: 'pointer',\n      transition: 'transform 0.2s'\n    },\n    cardHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      marginBottom: '20px',\n      fontSize: '1.5rem',\n      fontWeight: '600'\n    },\n    cardText: {\n      color: '#6b7280',\n      marginBottom: '20px',\n      lineHeight: '1.6'\n    },\n    button: {\n      width: '100%',\n      padding: '12px 20px',\n      border: 'none',\n      borderRadius: '8px',\n      fontWeight: '600',\n      fontSize: '1rem',\n      cursor: 'pointer',\n      color: 'white'\n    },\n    gameHeader: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: '30px',\n      flexWrap: 'wrap',\n      gap: '20px'\n    },\n    navButton: {\n      display: 'flex',\n      alignItems: 'center',\n      background: 'none',\n      border: 'none',\n      color: '#a16207',\n      fontSize: '1rem',\n      cursor: 'pointer'\n    },\n    gameTitle: {\n      textAlign: 'center'\n    },\n    gameLayout: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      gap: '30px',\n      flexWrap: 'wrap'\n    },\n    boardContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: '10px'\n    },\n    boardWrapper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      position: 'relative'\n    },\n    coordinatesContainer: {\n      display: 'grid',\n      gridTemplateColumns: '30px repeat(8, 1fr) 30px',\n      gridTemplateRows: '30px repeat(8, 1fr) 30px',\n      width: isMobile ? '410px' : '560px',\n      height: isMobile ? '410px' : '560px',\n      fontSize: '14px',\n      fontWeight: '600',\n      color: '#8B4513'\n    },\n    board: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(8, 1fr)',\n      gridTemplateRows: 'repeat(8, 1fr)',\n      width: isMobile ? '350px' : '500px',\n      height: isMobile ? '350px' : '500px',\n      border: '3px solid #8B4513',\n      borderRadius: '4px',\n      overflow: 'hidden',\n      boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)',\n      gridColumn: '2 / 10',\n      gridRow: '2 / 10',\n      position: 'relative'\n    },\n    square: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontSize: isMobile ? '2.8rem' : '3.8rem',\n      cursor: 'pointer',\n      transition: 'background-color 0.15s ease, border 0.15s ease',\n      userSelect: 'none',\n      fontWeight: 'bold',\n      width: '100%',\n      height: '100%',\n      minWidth: 0,\n      minHeight: 0,\n      boxSizing: 'border-box'\n    },\n    sidebar: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '20px',\n      width: isMobile ? '100%' : '350px',\n      maxWidth: '500px'\n    },\n    infoCard: {\n      background: 'white',\n      borderRadius: '12px',\n      padding: '20px',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\n    },\n    infoTitle: {\n      fontSize: '1.2rem',\n      fontWeight: '600',\n      marginBottom: '15px',\n      color: '#374151'\n    }\n  };\n  if (gameMode === 'menu') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.wrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.header,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: styles.title,\n            children: \"Chess Opening Trainer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.subtitle,\n            children: \"Master your favorite openings against AI opposition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1023,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.grid,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.card,\n            onClick: () => startTraining('sicilianDragon'),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                ...styles.cardHeader,\n                color: '#dc2626'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Target, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1029,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {\n                  marginLeft: '10px'\n                },\n                children: \"Sicilian Dragon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1030,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1028,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: styles.cardText,\n              children: \"Practice the Accelerated Dragon as Black. White moves automatically - you learn the best responses!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1032,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                ...styles.button,\n                backgroundColor: '#dc2626'\n              },\n              children: \"Train as Black\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1033,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.card,\n            onClick: () => startTraining('scotchGame'),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                ...styles.cardHeader,\n                color: '#2563eb'\n              },\n              children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1040,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {\n                  marginLeft: '10px'\n                },\n                children: \"Scotch Game\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1041,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1039,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: styles.cardText,\n              children: \"Learn the Scotch Game as White. Black moves automatically - focus on mastering your attacking lines!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1043,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                ...styles.button,\n                backgroundColor: '#2563eb'\n              },\n              children: \"Train as White\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1044,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1038,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.card,\n            onClick: () => startTraining('scotchGambit'),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                ...styles.cardHeader,\n                color: '#16a34a'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Play, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1051,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {\n                  marginLeft: '10px'\n                },\n                children: \"Scotch Gambit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1052,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1050,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: styles.cardText,\n              children: \"Master the Scotch Gambit as White. Black responds automatically - learn the aggressive sacrificial lines!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1054,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                ...styles.button,\n                backgroundColor: '#16a34a'\n              },\n              children: \"Train as White\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1055,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1049,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'white',\n            borderRadius: '12px',\n            padding: '30px',\n            boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontSize: '1.5rem',\n              marginBottom: '20px',\n              color: '#374151'\n            },\n            children: \"How it works\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1062,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'grid',\n              gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',\n              gap: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  fontWeight: '600',\n                  marginBottom: '10px',\n                  color: '#374151'\n                },\n                children: \"\\uD83C\\uDFAF Focus on Your Side\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1065,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: '#6b7280',\n                  fontSize: '0.9rem',\n                  lineHeight: '1.5'\n                },\n                children: \"The opponent moves automatically based on opening theory. You only need to learn your moves!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1066,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1064,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  fontWeight: '600',\n                  marginBottom: '10px',\n                  color: '#374151'\n                },\n                children: \"\\uD83E\\uDD16 Smart AI Responses\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1069,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: '#6b7280',\n                  fontSize: '0.9rem',\n                  lineHeight: '1.5'\n                },\n                children: \"AI plays realistic variations from grandmaster games. Learn to handle different responses.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1070,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1068,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  fontWeight: '600',\n                  marginBottom: '10px',\n                  color: '#374151'\n                },\n                children: \"\\uD83D\\uDCC8 Immediate Feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1073,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: '#6b7280',\n                  fontSize: '0.9rem',\n                  lineHeight: '1.5'\n                },\n                children: \"Get instant feedback on your moves. Make a mistake? Just click \\\"Undo\\\" to try again!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1074,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1072,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1063,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '20px',\n              padding: '15px',\n              backgroundColor: '#f0f9ff',\n              borderRadius: '8px',\n              border: '1px solid #0ea5e9'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: '#0c4a6e',\n                fontSize: '0.9rem',\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uD83D\\uDCA1 Tip:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1079,\n                columnNumber: 17\n              }, this), \" Wait for the opponent to move automatically, then make your best move. The AI will show you when it's your turn!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1078,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1077,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1020,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1019,\n      columnNumber: 7\n    }, this);\n  }\n  const opening = openingDatabases[trainingMode];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.gameHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.navButton,\n          onClick: backToMenu,\n          children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n            size: 20,\n            style: {\n              marginRight: '5px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1095,\n            columnNumber: 13\n          }, this), \"Back to Menu\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1094,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.gameTitle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontSize: '2rem',\n              color: '#92400e',\n              marginBottom: '5px'\n            },\n            children: opening.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: '#a16207'\n            },\n            children: [\"Playing as \", opening.color]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1099,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              ...styles.navButton,\n              opacity: undoStack.length > 0 ? 1 : 0.5,\n              cursor: undoStack.length > 0 ? 'pointer' : 'not-allowed'\n            },\n            onClick: undoStack.length > 0 ? undoLastMove : undefined,\n            disabled: undoStack.length === 0,\n            children: [/*#__PURE__*/_jsxDEV(Undo2, {\n              size: 20,\n              style: {\n                marginRight: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1116,\n              columnNumber: 15\n            }, this), \"Undo\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.navButton,\n            onClick: resetGame,\n            children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n              size: 20,\n              style: {\n                marginRight: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1121,\n              columnNumber: 15\n            }, this), \"Reset\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1093,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.gameLayout,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.boardContainer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.boardWrapper,\n            children: [trainingMode && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '10px',\n                textAlign: 'center',\n                color: needsReplay ? '#dc2626' : '#a16207',\n                fontSize: '0.9rem',\n                fontWeight: '600',\n                padding: needsReplay ? '8px 16px' : '0',\n                backgroundColor: needsReplay ? '#fef2f2' : 'transparent',\n                borderRadius: needsReplay ? '8px' : '0',\n                border: needsReplay ? '2px solid #dc2626' : 'none'\n              },\n              children: needsReplay ? '⚠️ Wrong move! Follow the yellow arrow to make the correct move.' : openingDatabases[trainingMode].color === 'black' ? '♟ Playing as Black (Black pieces at bottom)' : '♙ Playing as White (White pieces at bottom)'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.coordinatesContainer,\n              children: [Array.from({\n                length: 8\n              }, (_, i) => {\n                var _openingDatabases$tra5;\n                const file = trainingMode && ((_openingDatabases$tra5 = openingDatabases[trainingMode]) === null || _openingDatabases$tra5 === void 0 ? void 0 : _openingDatabases$tra5.color) === 'black' ? String.fromCharCode(104 - i) // h,g,f,e,d,c,b,a\n                : String.fromCharCode(97 + i); // a,b,c,d,e,f,g,h\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    gridColumn: i + 2,\n                    gridRow: 1,\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  },\n                  children: file\n                }, `top-${i}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1159,\n                  columnNumber: 21\n                }, this);\n              }), Array.from({\n                length: 8\n              }, (_, i) => {\n                var _openingDatabases$tra6;\n                const rank = trainingMode && ((_openingDatabases$tra6 = openingDatabases[trainingMode]) === null || _openingDatabases$tra6 === void 0 ? void 0 : _openingDatabases$tra6.color) === 'black' ? i + 1 : 8 - i;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    gridColumn: 1,\n                    gridRow: i + 2,\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  },\n                  children: rank\n                }, `left-${i}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1175,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: styles.board,\n                onMouseMove: handleMouseMove,\n                onTouchMove: handleTouchMove,\n                children: [board.flatMap((row, rowIndex) => row.map((piece, colIndex) => {\n                  // Get display coordinates (potentially flipped)\n                  const [displayRow, displayCol] = getDisplayCoordinates(rowIndex, colIndex);\n                  const isLightSquare = (displayRow + displayCol) % 2 === 0;\n                  const isSelected = selectedSquare && selectedSquare[0] === rowIndex && selectedSquare[1] === colIndex;\n                  const isDragging = draggedPiece && draggedPiece.fromRow === rowIndex && draggedPiece.fromCol === colIndex;\n\n                  // Chess.com style colors\n                  let backgroundColor;\n                  if (isSelected) {\n                    backgroundColor = '#f7dc6f'; // Yellow highlight for selected\n                  } else {\n                    backgroundColor = isLightSquare ? '#f0d9b5' : '#b58863'; // Chess.com colors\n                  }\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    \"data-square\": `${displayRow},${displayCol}`,\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      fontSize: isMobile ? '2.2rem' : '2.8rem',\n                      cursor: piece ? 'pointer' : 'default',\n                      transition: 'background-color 0.15s ease, border 0.15s ease',\n                      userSelect: 'none',\n                      fontWeight: 'bold',\n                      width: '100%',\n                      height: '100%',\n                      minWidth: 0,\n                      minHeight: 0,\n                      boxSizing: 'border-box',\n                      backgroundColor,\n                      border: isSelected ? '2px solid #f39c12' : 'none',\n                      // Position this square at its display coordinates\n                      gridColumn: displayCol + 1,\n                      gridRow: displayRow + 1,\n                      opacity: isDragging ? 0.3 : 1,\n                      // Mobile optimization\n                      WebkitTouchCallout: 'none',\n                      WebkitUserSelect: 'none',\n                      touchAction: 'none'\n                    },\n                    onMouseDown: e => handleMouseDown(e, displayRow, displayCol),\n                    onMouseUp: e => handleMouseUp(e, displayRow, displayCol),\n                    onTouchStart: e => handleTouchStart(e, displayRow, displayCol),\n                    onTouchEnd: e => handleTouchEnd(e, displayRow, displayCol),\n                    onClick: () => handleSquareClick(displayRow, displayCol),\n                    onTouchCancel: () => {\n                      setDraggedPiece(null);\n                      setSelectedSquare(null);\n                    },\n                    onMouseEnter: e => {\n                      if (!isSelected && !draggedPiece) {\n                        e.target.style.backgroundColor = isLightSquare ? '#ead5aa' : '#a67c52';\n                      }\n                    },\n                    onMouseLeave: e => {\n                      if (!isSelected && !draggedPiece) {\n                        e.target.style.backgroundColor = isLightSquare ? '#f0d9b5' : '#b58863';\n                      }\n                    },\n                    children: piece && !isDragging && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `chess-piece ${isPieceWhite(piece) ? 'chess-piece-white' : 'chess-piece-black'}`,\n                      style: {\n                        width: '80%',\n                        height: '80%',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                      },\n                      children: (() => {\n                        console.log('Rendering piece:', piece, 'at', rowIndex, colIndex);\n                        console.log('About to call getPieceSVG...');\n                        const result = getPieceSVG(piece);\n                        console.log('getPieceSVG returned:', result);\n                        return result;\n                      })()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1255,\n                      columnNumber: 29\n                    }, this)\n                  }, `${rowIndex}-${colIndex}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1206,\n                    columnNumber: 25\n                  }, this);\n                })), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    pointerEvents: 'none',\n                    zIndex: 10\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    style: {\n                      width: '100%',\n                      height: '100%'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n                      children: /*#__PURE__*/_jsxDEV(\"marker\", {\n                        id: \"arrowhead\",\n                        markerWidth: \"10\",\n                        markerHeight: \"7\",\n                        refX: \"9\",\n                        refY: \"3.5\",\n                        orient: \"auto\",\n                        children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n                          points: \"0 0, 10 3.5, 0 7\",\n                          fill: \"#ffeb3b\",\n                          stroke: \"#f39c12\",\n                          strokeWidth: \"1\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1294,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1292,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1291,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: `${(showHint.from.col + 0.5) * 12.5}%`,\n                      y1: `${(showHint.from.row + 0.5) * 12.5}%`,\n                      x2: `${(showHint.to.col + 0.5) * 12.5}%`,\n                      y2: `${(showHint.to.row + 0.5) * 12.5}%`,\n                      stroke: \"#ffeb3b\",\n                      strokeWidth: \"6\",\n                      markerEnd: \"url(#arrowhead)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1297,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1290,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1281,\n                  columnNumber: 21\n                }, this), draggedPiece && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    position: 'fixed',\n                    pointerEvents: 'none',\n                    width: isMobile ? '44px' : '60px',\n                    height: isMobile ? '44px' : '60px',\n                    zIndex: 1000,\n                    left: `${dragOffset.x}px`,\n                    top: `${dragOffset.y}px`,\n                    transform: 'translate(-50%, -50%)'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `chess-piece ${isPieceWhite(draggedPiece.piece) ? 'chess-piece-white' : 'chess-piece-black'}`,\n                    style: {\n                      width: '100%',\n                      height: '100%',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center'\n                    },\n                    children: getPieceSVG(draggedPiece.piece)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1322,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1312,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1188,\n                columnNumber: 17\n              }, this), Array.from({\n                length: 8\n              }, (_, i) => {\n                var _openingDatabases$tra7;\n                const rank = trainingMode && ((_openingDatabases$tra7 = openingDatabases[trainingMode]) === null || _openingDatabases$tra7 === void 0 ? void 0 : _openingDatabases$tra7.color) === 'black' ? i + 1 : 8 - i;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    gridColumn: 10,\n                    gridRow: i + 2,\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  },\n                  children: rank\n                }, `right-${i}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1342,\n                  columnNumber: 21\n                }, this);\n              }), Array.from({\n                length: 8\n              }, (_, i) => {\n                var _openingDatabases$tra8;\n                const file = trainingMode && ((_openingDatabases$tra8 = openingDatabases[trainingMode]) === null || _openingDatabases$tra8 === void 0 ? void 0 : _openingDatabases$tra8.color) === 'black' ? String.fromCharCode(104 - i) // h,g,f,e,d,c,b,a\n                : String.fromCharCode(97 + i); // a,b,c,d,e,f,g,h\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    gridColumn: i + 2,\n                    gridRow: 10,\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  },\n                  children: file\n                }, `bottom-${i}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1360,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.sidebar,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.infoCard,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: styles.infoTitle,\n              children: \"Game Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginBottom: '8px',\n                color: '#6b7280'\n              },\n              children: [\"Current turn: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  textTransform: 'capitalize',\n                  fontWeight: '600',\n                  color: '#374151'\n                },\n                children: currentPlayer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1379,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1378,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: '#6b7280'\n              },\n              children: [\"Move: \", Math.ceil(moveHistory.length / 2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1381,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginTop: '8px',\n                fontWeight: '600',\n                color: opening.color === 'white' && currentPlayer === 'white' || opening.color === 'black' && currentPlayer === 'black' ? '#16a34a' : '#ea580c'\n              },\n              children: opening.color === 'white' && currentPlayer === 'white' || opening.color === 'black' && currentPlayer === 'black' ? 'Your turn!' : 'Opponent thinking...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1382,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.infoCard,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: styles.infoTitle,\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '1.5rem',\n                fontWeight: 'bold',\n                color: '#374151',\n                marginBottom: '8px'\n              },\n              children: [score.correct, \"/\", score.total]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1393,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '0.9rem',\n                color: '#6b7280'\n              },\n              children: score.total > 0 ? `${Math.round(score.correct / score.total * 100)}% accuracy` : 'No moves yet'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1396,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1391,\n            columnNumber: 13\n          }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              borderRadius: '12px',\n              padding: '20px',\n              fontWeight: '600',\n              backgroundColor: feedback.includes('✓') ? '#dcfce7' : feedback.includes('✗') ? '#fef2f2' : '#f0f9ff',\n              color: feedback.includes('✓') ? '#166534' : feedback.includes('✗') ? '#991b1b' : '#1e40af',\n              border: feedback.includes('✓') ? '2px solid #22c55e' : feedback.includes('✗') ? '2px solid #ef4444' : '2px solid #3b82f6',\n              transform: feedback.includes('✗') ? 'scale(1.02)' : 'scale(1)',\n              transition: 'all 0.3s ease'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: 0\n              },\n              children: feedback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1412,\n              columnNumber: 17\n            }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '15px',\n                display: 'flex',\n                flexDirection: 'column',\n                gap: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  margin: 0,\n                  fontSize: '0.9rem',\n                  color: '#b45309',\n                  backgroundColor: '#fef3c7',\n                  padding: '8px 12px',\n                  borderRadius: '6px',\n                  border: '1px solid #fbbf24'\n                },\n                children: [\"\\uD83D\\uDCA1 Hint: Move from \", showHint.notation.split('-')[0], \" to \", showHint.notation.split('-')[1]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1415,\n                columnNumber: 21\n              }, this), undoStack.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  padding: '8px 16px',\n                  backgroundColor: '#3b82f6',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  fontSize: '0.9rem',\n                  fontWeight: '600',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  gap: '5px'\n                },\n                onClick: undoLastMove,\n                children: [/*#__PURE__*/_jsxDEV(Undo2, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1444,\n                  columnNumber: 25\n                }, this), \"Try Again\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1427,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1414,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.infoCard,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: styles.infoTitle,\n              children: \"Move History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                maxHeight: '200px',\n                overflowY: 'auto',\n                fontSize: '0.9rem'\n              },\n              children: moveHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: '#9ca3af',\n                  fontStyle: 'italic'\n                },\n                children: \"No moves yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1457,\n                columnNumber: 19\n              }, this) : moveHistory.map((move, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  marginBottom: '4px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    width: '30px',\n                    color: '#9ca3af'\n                  },\n                  children: [Math.ceil((index + 1) / 2), \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1461,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: index % 2 === 0 ? '#374151' : '#6b7280'\n                  },\n                  children: move\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1462,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1460,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1455,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1453,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1375,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1092,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1091,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessTrainingApp, \"VQHUuM285n9ev7g4Y5kUyda1BhU=\");\n_c = ChessTrainingApp;\nexport default ChessTrainingApp;\nvar _c;\n$RefreshReg$(_c, \"ChessTrainingApp\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ChevronLeft","RotateCcw","Play","BookOpen","Target","Undo2","jsxDEV","_jsxDEV","ChessTrainingApp","_s","style","document","createElement","textContent","head","appendChild","viewport","querySelector","name","content","removeChild","getInitialBoard","isMobile","setIsMobile","window","innerWidth","handleResize","addEventListener","removeEventListener","board","setBoard","selectedSquare","setSelectedSquare","currentPlayer","setCurrentPlayer","moveHistory","setMoveHistory","gameMode","setGameMode","trainingMode","setTrainingMode","feedback","setFeedback","score","setScore","correct","total","draggedPiece","setDraggedPiece","dragOffset","setDragOffset","x","y","showHint","setShowHint","needsReplay","setNeedsReplay","undoStack","setUndoStack","timeoutRefs","clearAllTimeouts","current","forEach","clearTimeout","addTimeout","callback","delay","timeoutId","setTimeout","filter","id","push","openingDatabases","sicilianDragon","color","moves","scotchGame","scotchGambit","getPieceSVG","piece","isWhite","isPieceWhite","pieceType","toLowerCase","kingSVG","xmlns","viewBox","width","height","children","fill","d","fileName","_jsxFileName","lineNumber","columnNumber","queenSVG","rookSVG","bishopSVG","knightSVG","pawnSVG","getDisplayCoordinates","row","col","_openingDatabases$tra","getSquareName","String","fromCharCode","parseSquareName","square","charCodeAt","parseInt","toUpperCase","isValidMove","fromRow","fromCol","toRow","toCol","targetPiece","rowDiff","Math","abs","colDiff","piece_type","direction","startRow","isPathBlocked","rowDir","colDir","currentRow","currentCol","makeMove","newBoard","map","console","log","moveNotation","updatedMoveHistory","prevPlayer","makeOpponentMove","currentMoveHistory","opening","nextMoveKey","join","opponentMoves","length","opponentMove","floor","random","fromSquare","toSquare","split","currentBoard","prevHistory","updatedHistory","undoLastMove","lastState","prevStack","slice","checkMove","userMove","moveKey","expectedMoves","Object","keys","includes","prev","expectedMovesText","bestMove","fromDisplayRow","fromDisplayCol","toDisplayRow","toDisplayCol","from","to","notation","handleMouseDown","e","displayRow","displayCol","_openingDatabases$tra2","_e$touches$","_e$touches$2","isUserTurn","preventDefault","rect","currentTarget","getBoundingClientRect","clientX","touches","clientY","left","top","handleTouchStart","handleMouseMove","handleTouchMove","handleMouseUp","targetDisplayRow","targetDisplayCol","_openingDatabases$tra3","targetRow","targetCol","handleTouchEnd","changedTouches","_targetElement$datase2","touch","elementBelow","elementFromPoint","targetElement","_targetElement$datase","dataset","parentElement","touchRow","touchCol","Number","handleSquareClick","_openingDatabases$tra4","fromPiece","startTraining","mode","freshBoard","firstMove","resetGame","backToMenu","handleGlobalMouseMove","_e$touches$3","_e$touches$4","handleGlobalTouchMove","handleGlobalMouseUp","handleGlobalTouchEnd","passive","styles","container","minHeight","background","padding","fontFamily","wrapper","maxWidth","margin","header","textAlign","marginBottom","title","fontSize","fontWeight","subtitle","grid","display","gridTemplateColumns","gap","card","borderRadius","boxShadow","cursor","transition","cardHeader","alignItems","cardText","lineHeight","button","border","gameHeader","justifyContent","flexWrap","navButton","gameTitle","gameLayout","boardContainer","flexDirection","boardWrapper","position","coordinatesContainer","gridTemplateRows","overflow","gridColumn","gridRow","userSelect","minWidth","boxSizing","sidebar","infoCard","infoTitle","onClick","size","marginLeft","backgroundColor","marginTop","marginRight","opacity","undefined","disabled","Array","_","i","_openingDatabases$tra5","file","_openingDatabases$tra6","rank","onMouseMove","onTouchMove","flatMap","rowIndex","colIndex","isLightSquare","isSelected","isDragging","WebkitTouchCallout","WebkitUserSelect","touchAction","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onTouchCancel","onMouseEnter","target","onMouseLeave","className","result","pointerEvents","zIndex","markerWidth","markerHeight","refX","refY","orient","points","stroke","strokeWidth","x1","y1","x2","y2","markerEnd","transform","_openingDatabases$tra7","_openingDatabases$tra8","textTransform","ceil","round","maxHeight","overflowY","fontStyle","move","index","_c","$RefreshReg$"],"sources":["/Users/tgira1018/Documents/GitHub/boardmate/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { ChevronLeft, RotateCcw, Play, BookOpen, Target, Undo2 } from 'lucide-react';\n\nconst ChessTrainingApp = () => {\n  // Add mobile-specific CSS\n  useEffect(() => {\n    // Add mobile viewport and chess font optimization\n    const style = document.createElement('style');\n    style.textContent = `\n      .chess-piece {\n        font-family: 'Arial Unicode MS', 'Lucida Grande', 'Segoe UI Symbol', 'DejaVu Sans', Arial, sans-serif !important;\n        font-feature-settings: normal !important;\n        -webkit-font-smoothing: antialiased !important;\n        -moz-osx-font-smoothing: grayscale !important;\n        font-variant-emoji: text !important;\n        text-rendering: optimizeLegibility !important;\n        font-size: inherit !important;\n        line-height: 1 !important;\n        vertical-align: baseline !important;\n        font-weight: normal !important;\n        font-style: normal !important;\n        color: inherit !important;\n        -webkit-text-fill-color: inherit !important;\n        -webkit-text-stroke: 0 !important;\n        -webkit-font-feature-settings: normal !important;\n        font-variant: normal !important;\n      }\n\n      .chess-piece-white {\n        /* SVG styling handled in component */\n      }\n\n      .chess-piece-black {\n        /* SVG styling handled in component */\n      }\n\n      body {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -khtml-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        -webkit-tap-highlight-color: transparent;\n        overflow-x: hidden;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // Ensure viewport is set for mobile\n    let viewport = document.querySelector('meta[name=\"viewport\"]');\n    if (!viewport) {\n      viewport = document.createElement('meta');\n      viewport.name = 'viewport';\n      viewport.content = 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no';\n      document.head.appendChild(viewport);\n    }\n\n    return () => {\n      document.head.removeChild(style);\n    };\n  }, []);\n\n  // Initial board setup - function to always get fresh copy\n  const getInitialBoard = () => [\n    ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],\n    ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\n    [null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null],\n    ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\n    ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']\n  ];\n\n  // State for responsive design\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const [board, setBoard] = useState(() => getInitialBoard());\n  const [selectedSquare, setSelectedSquare] = useState(null);\n  const [currentPlayer, setCurrentPlayer] = useState('white');\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [gameMode, setGameMode] = useState('menu');\n  const [trainingMode, setTrainingMode] = useState(null);\n  const [feedback, setFeedback] = useState('');\n  const [score, setScore] = useState({ correct: 0, total: 0 });\n  const [draggedPiece, setDraggedPiece] = useState(null);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  const [showHint, setShowHint] = useState(null);\n  const [needsReplay, setNeedsReplay] = useState(false);\n\n  // Undo functionality - minimal addition\n  const [undoStack, setUndoStack] = useState([]);\n\n  // Add timeout refs for cleanup\n  const timeoutRefs = useRef([]);\n\n  const clearAllTimeouts = () => {\n    timeoutRefs.current.forEach(clearTimeout);\n    timeoutRefs.current = [];\n  };\n\n  const addTimeout = (callback, delay) => {\n    const timeoutId = setTimeout(() => {\n      callback();\n      timeoutRefs.current = timeoutRefs.current.filter(id => id !== timeoutId);\n    }, delay);\n    timeoutRefs.current.push(timeoutId);\n    return timeoutId;\n  };\n\n  // Opening databases\n  const openingDatabases = {\n    sicilianDragon: {\n      name: \"Sicilian Defence - Accelerated Dragon\",\n      color: \"black\",\n      moves: {\n        \"\": [\"e2-e4\"],\n        \"e2-e4\": [\"c7-c5\"],\n        \"e2-e4,c7-c5\": [\"g1-f3\"],\n        \"e2-e4,c7-c5,g1-f3\": [\"g7-g6\"],\n        \"e2-e4,c7-c5,g1-f3,g7-g6\": [\"d2-d4\"],\n        \"e2-e4,c7-c5,g1-f3,g7-g6,d2-d4\": [\"c5-d4\"],\n        \"e2-e4,c7-c5,g1-f3,g7-g6,d2-d4,c5-d4\": [\"f3-d4\"],\n        \"e2-e4,c7-c5,g1-f3,g7-g6,d2-d4,c5-d4,f3-d4\": [\"f8-g7\"],\n        \"e2-e4,c7-c5,g1-f3,g7-g6,d2-d4,c5-d4,f3-d4,f8-g7\": [\"c2-c4\", \"b1-c3\", \"f2-f3\"],\n        \"e2-e4,c7-c5,g1-f3,g7-g6,d2-d4,c5-d4,f3-d4,f8-g7,c2-c4\": [\"b8-c6\"],\n        \"e2-e4,c7-c5,g1-f3,g7-g6,d2-d4,c5-d4,f3-d4,f8-g7,b1-c3\": [\"b8-c6\"],\n      }\n    },\n    scotchGame: {\n      name: \"Scotch Game\",\n      color: \"white\",\n      moves: {\n        \"\": [\"e2-e4\"],\n        \"e2-e4\": [\"e7-e5\"],\n        \"e2-e4,e7-e5\": [\"g1-f3\"],\n        \"e2-e4,e7-e5,g1-f3\": [\"b8-c6\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6\": [\"d2-d4\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4\": [\"e5-d4\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4,e5-d4\": [\"f3-d4\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4,e5-d4,f3-d4\": [\"f8-c5\", \"g8-f6\", \"d8-h4\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4,e5-d4,f3-d4,f8-c5\": [\"d4-b5\", \"d4-c6\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4,e5-d4,f3-d4,g8-f6\": [\"d4-c6\", \"b1-c3\"],\n      }\n    },\n    scotchGambit: {\n      name: \"Scotch Gambit\",\n      color: \"white\",\n      moves: {\n        \"\": [\"e2-e4\"],\n        \"e2-e4\": [\"e7-e5\"],\n        \"e2-e4,e7-e5\": [\"g1-f3\"],\n        \"e2-e4,e7-e5,g1-f3\": [\"b8-c6\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6\": [\"d2-d4\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4\": [\"e5-d4\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4,e5-d4\": [\"f1-c4\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4,e5-d4,f1-c4\": [\"f8-c5\", \"g8-f6\", \"f7-f5\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4,e5-d4,f1-c4,f8-c5\": [\"c2-c3\", \"e1-g1\"],\n        \"e2-e4,e7-e5,g1-f3,b8-c6,d2-d4,e5-d4,f1-c4,g8-f6\": [\"e4-e5\", \"c2-c3\"],\n      }\n    }\n  };\n\n  // SVG piece components - using inline SVG for consistent rendering\n  const getPieceSVG = (piece) => {\n    const isWhite = isPieceWhite(piece);\n    const pieceType = piece.toLowerCase();\n\n    const kingSVG = (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2048 2048\" width=\"100%\" height=\"100%\">\n        <path fill={isWhite ? \"#f9f9f9\" : \"#101010\"} d=\"m501.6 1811 48.4-354.4-260-269.2s-166.4-288.2 29.9-481C582.2 448.7 826 727.2 826 727.2l195.6-165.7 184 165.7s216.4-232.5 430.4-76c214 156.5 255.4 317.6 117.4 531.6-138.1 214-250.9 280.7-250.9 280.7L1558 1811z\"/>\n        <path fill={isWhite ? \"#101010\" : \"#f9f9f9\"} d=\"M977 298v-95h94v95h107v95h-107v153q-48-16-94 0V393H870v-95zm47 314q-47 0-136 121-31-36-50-55 93-140 186-140 92 0 186 140-20 19-50 55-90-121-136-121zm-447 907-26 156 145-84zm410-206q-1-147-36.5-274.5T870 845q-45-88-131.5-153T570 627q-103 0-208 93T257 949q0 109 86.5 236T546 1408q212-88 441-95zm37 530H448l61-365q-325-280-326-535-1-159 125-274.5T575 553q78 0 158.5 47T876 719q61 74 98.5 164.5T1024 1034q12-60 49-150.5t99-164.5q61-72 142-119t159-47q140 0 266 115.5T1865 943q-2 255-326 535l61 365zm0-74h489l-50-298q-216-84-439-84t-439 84l-50 298zm447-250 26 156-145-84zm-410-206q229 7 441 95 115-96 202-223t87-236q0-136-105.5-229T1478 627q-83 0-169.5 65T1178 845q-46 66-81.5 193.5T1061 1313zm-176 233 141-84 137 86-141 84z\"/>\n      </svg>\n    );\n\n    const queenSVG = (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2048 2048\" width=\"100%\" height=\"100%\">\n        <path fill={isWhite ? \"#f9f9f9\" : \"#101010\"} d=\"m508.5 1815.6 48.4-356.7-216.3-554.6-135.8-20.7-16.1-126.5 112.7-43.8 78.3 73.7-18.4 99 246.2 197.8 112.8-568.3L635 428l78.3-108 112.8 43.7-23 161 223.2 474 244-490-66.8-105.9 92-92 105.9 73.6L1337 534l103.5 529.2 260-161-16-142.7 131-46 57.6 131.1-207 103.6-175 529.2 48.4 308.4z\"/>\n        <path fill={isWhite ? \"#101010\" : \"#f9f9f9\"} d=\"M1024 1769h478q-53-130-43-280-100-39-213-67.5t-222-28.5q-110 0-223 28.5T589 1489q9 150-43 280zm0-450q111 0 223.5 26.5T1468 1413q17-105 60.5-212.5T1634 988l-220 155-123-601-267 555-267-555-123 601-220-155q61 105 104.5 212.5T580 1413q108-41 220.5-67.5T1024 1319zm0 524H441q114-231 57.5-456.5T296 937q-12 2-19 2-54 0-92.5-38.5T146 808t38.5-92.5T277 677t92.5 38.5T408 808q0 20-6 38-4 14-15 33l196 139 100-486q-64-31-72-103-5-44 29-91t88-53q54-5 96 29t48 88q7 68-46 114l198 412 198-412q-54-46-46-114 6-54 48-88t96-29q54 6 87.5 53t29.5 91q-9 72-72 103l100 486 196-139q-12-19-15-33-6-18-6-38 0-54 38.5-92.5T1771 677t92.5 38.5T1902 808t-38.5 92.5T1771 939q-7 0-19-2-147 224-203 449.5t58 456.5zM276 746q-62 0-62 62t62 62q63 0 63-62t-63-62zm466-394q-62 0-62 62t62 62 62-62-62-62zM590 1519l119 72-134 86q19-86 15-158zm1182-773q-63 0-63 62t63 62q62 0 62-62t-62-62zm-466-394q-62 0-62 62t62 62 62-62-62-62zm152 1167-119 72 134 86q-20-86-15-158zm-573 47 139-83 139 86-139 84z\"/>\n      </svg>\n    );\n\n    const rookSVG = (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2048 2048\" width=\"100%\" height=\"100%\">\n        <path fill={isWhite ? \"#f9f9f9\" : \"#101010\"} d=\"m435 1804 16-212 152-115 51-688-148-115-7-276 210-2 4 138 198 2 7-140 212-3 14 145 193-4 5-138h204l-7 285-145 106 42 693 172 124 19 207z\"/>\n        <path fill={isWhite ? \"#101010\" : \"#f9f9f9\"} d=\"M1024 1501H643l5-74h752l5 74zm0-661H692l5-74h654l5 74zm0 1003H383l29-264 159-118 50-659-149-107-17-341h289v147h137V354h286v147h137V354h289l-17 341-149 107 50 659 159 118 29 264zm0-74h557l-15-149-161-119-54-735 152-109 13-230h-138v148h-285V427H955v148H670V427H532l13 230 152 109-54 735-161 119-15 149z\"/>\n      </svg>\n    );\n\n    const bishopSVG = (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2048 2048\" width=\"100%\" height=\"100%\">\n        <path fill={isWhite ? \"#f9f9f9\" : \"#101010\"} d=\"m948 366 1-139 148-7 1 147zM564 860c114-267 456-443 456-443s392 176 476 502c-9 209-183 332-183 332l27 221-653 6 46-233s-230-171-169-385zm-101 790c175 6 355 23 425-142h92s0 190-88 246c-163 103-625 38-625 38s-15-146 196-142zm631 37-36-185 102 5s22 153 315 131c381-17 318 153 318 153l-483 5z\"/>\n        <path fill={isWhite ? \"#101010\" : \"#f9f9f9\"} d=\"M1024 356q66 0 64-66 1-55-64-55-66 0-64 55-3 66 64 66zm0 1204q0 114-101 199t-223 84H205q0-117 65-179t142-62h250q51 0 88-7t71-60l10-16h76q-7 21-3 13-45 105-109 125t-146 19H409q-52 0-86 40t-34 53h424q66 0 159-65t93-185H624q67-116 72-229-114-119-162-223t-6-224q33-96 118-189t312-247q-17-11-46-36t-29-79q0-58 41-96t100-38q58 0 100 38t41 96q0 54-29 79t-46 36q226 153 311 247t119 189q42 119-6 224t-162 223q4 113 72 229h-341q0 120 93 185t159 65h424q0-13-34-53t-86-40h-240q-83 0-146-19t-109-125q4 8-3-13h76l10 16q33 53 70 60t89 7h250q76 0 142 62t65 179h-495q-123 0-223-84t-101-199zm0-114h283q-28-84-29-154-120-41-254-38-135-3-254 38-2 70-29 154zm0-267q159-1 285 42 189-180 142-346-60-193-427-431-368 238-427 431-48 166 142 346 125-43 285-42zm-47-361V714h94v104h95v89h-95v165h-94V907h-95v-89z\"/>\n      </svg>\n    );\n\n    const knightSVG = (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2048 2048\" width=\"100%\" height=\"100%\">\n        <path fill={isWhite ? \"#f9f9f9\" : \"#101010\"} d=\"m352 861 787-569 94 148s336 103 398 388c63 286 51 974 51 974l-1088 9s-37-290 184-460c221-171 221-212 221-212s-226-71-295-16-117 138-117 138l-129-67 74-85-88-97-94 56z\"/>\n        <path fill={isWhite ? \"#101010\" : \"#f9f9f9\"} d=\"m1151 178-115 154c-74 50-147 98-220 144-73 45-112 81-116 107L304 846l12 297 122-86 51 50-115 82 217 121 56-102c37-68 135-88 292-60l-55 85c-25 37-63 60-115 71a608 608 0 0 0-183 238c-32 82-45 182-39 301h1242c-23-55-42-118-57-190-15-73-17-152-5-237 29-239 13-440-47-603-61-164-205-303-433-418l-96-217zm-17 145 59 133a664 664 0 0 1 262 188c55 72 100 150 134 234 27 97 40 181 41 253 0 71-3 140-9 205-7 65-11 131-13 199-2 67 9 145 32 234H621c-4-84 12-158 48-223s85-124 146-177c78-22 129-56 152-102s53-90 90-131c13-10 27-15 38-15 10-1 21 0 33-2 52-7 95-36 129-85 33-49 51-104 52-165l-19-67c-37 159-99 245-188 257l-45 6c-16 1-33 10-52 26-41-25-87-35-138-31-74 6-129 15-165 27l-108 73-39 45-47-28 78-65-138-144-64 41-4-125 366-241c15-34 58-74 131-120l208-131 49-69zM960 564c-6 0-12 2-18 7L826 671l212 2c23 0 17-21-16-63-24-31-44-46-62-46zM502 868l-33 4-33 56 57 26 46-55-37-31z\"/>\n      </svg>\n    );\n\n    const pawnSVG = (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2048 2048\" width=\"100%\" height=\"100%\">\n        <path fill={isWhite ? \"#f9f9f9\" : \"#101010\"} d=\"m734 981 196-193s-189-82-79-288c79-149 303-114 361 50 63 179-113 240-113 240l226 197Zm-235 799s-8-107 50-154c196-173 338-386 371-599l210 2c33 206 182 447 321 561 101 59 99 199 99 199z\"/>\n        <path fill={isWhite ? \"#101010\" : \"#f9f9f9\"} d=\"M520 1769h1008q8-97-132-182-132-101-196-239t-80-309H928q-15 170-79 309t-197 239q-141 85-132 182zm504 74H446v-74q-4-80 42-137t125-108q117-91 172-217t78-268H576l284-239q-86-74-86-188 0-103 73-177t177-74q103 0 177 74t73 177q0 114-86 188l284 239h-287q23 141 78 268t172 217q79 51 125 108t42 137v74zM756 974h536l-225-191q134-31 134-171 0-76-52-126t-125-51q-73 0-125 51t-52 126q0 140 134 171z\"/>\n      </svg>\n    );\n\n    // Return the appropriate SVG based on piece type\n    switch (pieceType) {\n      case 'k': return kingSVG;\n      case 'q': return queenSVG;\n      case 'r': return rookSVG;     // ← Now returns rook instead of king\n      case 'b': return bishopSVG;   // ← Now returns bishop instead of king\n      case 'n': return knightSVG;   // ← Now returns knight instead of king\n      case 'p': return pawnSVG;     // ← Now returns pawn instead of king\n      default: return kingSVG;\n    }\n  };\n\n\n  // Helper function to get display coordinates (flipped for black)\n  const getDisplayCoordinates = (row, col) => {\n    if (trainingMode && openingDatabases[trainingMode]?.color === 'black') {\n      // Flip the board when playing as black\n      return [7 - row, 7 - col];\n    }\n    return [row, col];\n  };\n\n  // Helper functions\n  const getSquareName = (row, col) => {\n    return String.fromCharCode(97 + col) + (8 - row);\n  };\n\n  const parseSquareName = (square) => {\n    const col = square.charCodeAt(0) - 97;\n    const row = 8 - parseInt(square[1]);\n    return [row, col];\n  };\n\n  const isPieceWhite = (piece) => piece && piece === piece.toUpperCase();\n\n  const isValidMove = (fromRow, fromCol, toRow, toCol, piece) => {\n    if (toRow < 0 || toRow >= 8 || toCol < 0 || toCol >= 8) return false;\n\n    const targetPiece = board[toRow][toCol];\n    if (targetPiece && isPieceWhite(piece) === isPieceWhite(targetPiece)) return false;\n\n    const rowDiff = Math.abs(toRow - fromRow);\n    const colDiff = Math.abs(toCol - fromCol);\n    const piece_type = piece.toLowerCase();\n\n    switch (piece_type) {\n      case 'p':\n        const direction = isPieceWhite(piece) ? -1 : 1;\n        const startRow = isPieceWhite(piece) ? 6 : 1;\n\n        if (toCol === fromCol) {\n          if (toRow === fromRow + direction && !targetPiece) return true;\n          if (fromRow === startRow && toRow === fromRow + 2 * direction && !targetPiece) return true;\n        } else if (Math.abs(toCol - fromCol) === 1 && toRow === fromRow + direction) {\n          return !!targetPiece;\n        }\n        return false;\n\n      case 'r':\n        return (rowDiff === 0 || colDiff === 0) && !isPathBlocked(fromRow, fromCol, toRow, toCol);\n\n      case 'n':\n        return (rowDiff === 2 && colDiff === 1) || (rowDiff === 1 && colDiff === 2);\n\n      case 'b':\n        return rowDiff === colDiff && !isPathBlocked(fromRow, fromCol, toRow, toCol);\n\n      case 'q':\n        return (rowDiff === 0 || colDiff === 0 || rowDiff === colDiff) && !isPathBlocked(fromRow, fromCol, toRow, toCol);\n\n      case 'k':\n        return rowDiff <= 1 && colDiff <= 1;\n\n      default:\n        return false;\n    }\n  };\n\n  const isPathBlocked = (fromRow, fromCol, toRow, toCol) => {\n    const rowDir = toRow > fromRow ? 1 : toRow < fromRow ? -1 : 0;\n    const colDir = toCol > fromCol ? 1 : toCol < fromCol ? -1 : 0;\n\n    let currentRow = fromRow + rowDir;\n    let currentCol = fromCol + colDir;\n\n    while (currentRow !== toRow || currentCol !== toCol) {\n      if (board[currentRow][currentCol]) return true;\n      currentRow += rowDir;\n      currentCol += colDir;\n    }\n\n    return false;\n  };\n\n  const makeMove = (fromRow, fromCol, toRow, toCol) => {\n    const newBoard = board.map(row => [...row]);\n    const piece = newBoard[fromRow][fromCol];\n\n    console.log(`Making move: ${getSquareName(fromRow, fromCol)}-${getSquareName(toRow, toCol)} (${piece})`);\n\n    newBoard[toRow][toCol] = piece;\n    newBoard[fromRow][fromCol] = null;\n\n    const moveNotation = `${getSquareName(fromRow, fromCol)}-${getSquareName(toRow, toCol)}`;\n    const updatedMoveHistory = [...moveHistory, moveNotation];\n\n    setBoard(newBoard);\n    setMoveHistory(updatedMoveHistory);\n    setCurrentPlayer(prevPlayer => prevPlayer === 'white' ? 'black' : 'white');\n\n    console.log('Updated move history:', updatedMoveHistory);\n\n    return { moveNotation, updatedMoveHistory };\n  };\n\n  const makeOpponentMove = (currentMoveHistory) => {\n    console.log('makeOpponentMove called');\n    console.log('Current moveHistory when making opponent move:', currentMoveHistory);\n\n    const opening = openingDatabases[trainingMode];\n    const nextMoveKey = currentMoveHistory.join(',');\n    const opponentMoves = opening.moves[nextMoveKey];\n\n    console.log('Looking for opponent move with key:', `\"${nextMoveKey}\"`);\n    console.log('Available moves for this key:', opponentMoves);\n\n    if (opponentMoves && opponentMoves.length > 0) {\n      // Wait a bit to simulate thinking time\n      addTimeout(() => {\n        const opponentMove = opponentMoves[Math.floor(Math.random() * opponentMoves.length)];\n        console.log('Selected opponent move:', opponentMove);\n        const [fromSquare, toSquare] = opponentMove.split('-');\n        const [fromRow, fromCol] = parseSquareName(fromSquare);\n        const [toRow, toCol] = parseSquareName(toSquare);\n\n        console.log(`Opponent moving from ${fromSquare} to ${toSquare}`);\n\n        // Make the opponent move with a single state update\n        setBoard(currentBoard => {\n          const newBoard = currentBoard.map(row => [...row]);\n          const piece = newBoard[fromRow][fromCol];\n\n          console.log(`Making opponent move: ${getSquareName(fromRow, fromCol)}-${getSquareName(toRow, toCol)} (${piece})`);\n\n          newBoard[toRow][toCol] = piece;\n          newBoard[fromRow][fromCol] = null;\n\n          return newBoard;\n        });\n\n        const moveNotation = `${getSquareName(fromRow, fromCol)}-${getSquareName(toRow, toCol)}`;\n\n        setMoveHistory(prevHistory => {\n          const updatedHistory = [...prevHistory, moveNotation];\n          console.log('Updated move history after opponent move:', updatedHistory);\n          return updatedHistory;\n        });\n\n        setCurrentPlayer(prevPlayer => prevPlayer === 'white' ? 'black' : 'white');\n        setFeedback('Your turn!');\n\n      }, 800);\n    } else {\n      console.log('No opponent moves found for key:', `\"${nextMoveKey}\"`);\n      setFeedback('End of opening line - great job!');\n    }\n  };\n\n  const undoLastMove = () => {\n    if (undoStack.length === 0) return;\n\n    const lastState = undoStack[undoStack.length - 1];\n\n    // Clear timeouts to prevent conflicts\n    clearAllTimeouts();\n\n    // Restore the previous state\n    setBoard(lastState.board);\n    setMoveHistory(lastState.moveHistory);\n    setCurrentPlayer(lastState.currentPlayer);\n    setScore(lastState.score);\n    setShowHint(lastState.showHint);\n    setNeedsReplay(lastState.needsReplay);\n\n    // Remove the last state from history\n    setUndoStack(prevStack => prevStack.slice(0, -1));\n\n    setFeedback('Move undone. Try again!');\n    setSelectedSquare(null);\n    setDraggedPiece(null);\n\n    // Clear feedback after a moment\n    addTimeout(() => {\n      setFeedback('');\n    }, 2000);\n  };\n\n  const checkMove = (userMove, currentMoveHistory) => {\n    const opening = openingDatabases[trainingMode];\n    // Use the moveHistory that was passed in, excluding the user's move we just made\n    const moveKey = currentMoveHistory.slice(0, -1).join(',');\n    const expectedMoves = opening.moves[moveKey] || [];\n\n    console.log('Checking user move:', userMove);\n    console.log('Current move history:', currentMoveHistory);\n    console.log('Move key for lookup:', `\"${moveKey}\"`);\n    console.log('Expected moves:', expectedMoves);\n    console.log('Available keys in database:', Object.keys(opening.moves));\n    console.log('Move is correct?', expectedMoves.includes(userMove));\n\n    // Clear any existing hints\n    setShowHint(null);\n    setNeedsReplay(false);\n\n    if (expectedMoves.includes(userMove)) {\n      setFeedback('✓ Correct move!');\n      setScore(prev => ({ correct: prev.correct + 1, total: prev.total + 1 }));\n\n      console.log('Move was correct, calling makeOpponentMove...');\n\n      // Wait for move to be processed, then make opponent move\n      addTimeout(() => {\n        setFeedback('Opponent is thinking...');\n        // Wait a bit more for React state to update, then pass the current move history\n        addTimeout(() => {\n          makeOpponentMove(currentMoveHistory);\n        }, 300);\n      }, 500);\n    } else {\n      console.log('Move was incorrect, NOT calling makeOpponentMove');\n\n      // Save state for undo ONLY when user makes wrong move\n      setUndoStack(prevStack => [...prevStack, {\n        board: board.map(row => [...row]),\n        moveHistory: [...moveHistory],\n        currentPlayer,\n        score: { ...score },\n        showHint: null,\n        needsReplay: false\n      }]);\n\n      // Better error handling for empty expected moves\n      const expectedMovesText = expectedMoves.length > 0 ? expectedMoves.join(' or ') : 'No valid moves found';\n      setFeedback(`✗ Wrong move! Expected: ${expectedMovesText}. Click \"Undo\" to try again.`);\n      setScore(prev => ({ correct: prev.correct, total: prev.total + 1 }));\n      setNeedsReplay(true);\n\n      // Show hint arrow for the best move only if we have expected moves\n      if (expectedMoves.length > 0) {\n        const bestMove = expectedMoves[0];\n        const [fromSquare, toSquare] = bestMove.split('-');\n        const [fromRow, fromCol] = parseSquareName(fromSquare);\n        const [toRow, toCol] = parseSquareName(toSquare);\n\n        // Convert to display coordinates\n        const [fromDisplayRow, fromDisplayCol] = getDisplayCoordinates(fromRow, fromCol);\n        const [toDisplayRow, toDisplayCol] = getDisplayCoordinates(toRow, toCol);\n\n        setShowHint({\n          from: { row: fromDisplayRow, col: fromDisplayCol },\n          to: { row: toDisplayRow, col: toDisplayCol },\n          notation: bestMove\n        });\n\n        console.log('Setting hint arrow:', {\n          from: { row: fromDisplayRow, col: fromDisplayCol },\n          to: { row: toDisplayRow, col: toDisplayCol },\n          notation: bestMove\n        });\n      } else {\n        console.log('No expected moves found - cannot show hint arrow');\n      }\n\n      // Clear feedback after longer delay to give user time to see the hint\n      addTimeout(() => {\n        setFeedback('');\n        setShowHint(null);\n        setNeedsReplay(false);\n      }, 5000);\n    }\n  };\n\n  const handleMouseDown = (e, displayRow, displayCol) => {\n    if (gameMode !== 'training') return;\n\n    // Convert display coordinates to actual board coordinates\n    let row, col;\n    if (trainingMode && openingDatabases[trainingMode]?.color === 'black') {\n      row = 7 - displayRow;\n      col = 7 - displayCol;\n    } else {\n      row = displayRow;\n      col = displayCol;\n    }\n\n    const opening = openingDatabases[trainingMode];\n    const piece = board[row][col];\n\n    // Check if it's the user's turn and they're clicking their piece\n    const isUserTurn = (opening.color === 'white' && currentPlayer === 'white') ||\n                       (opening.color === 'black' && currentPlayer === 'black');\n\n    if (!isUserTurn || !piece || isPieceWhite(piece) !== (currentPlayer === 'white')) {\n      return;\n    }\n\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    const clientX = e.clientX || (e.touches && e.touches[0]?.clientX) || 0;\n    const clientY = e.clientY || (e.touches && e.touches[0]?.clientY) || 0;\n\n    setDraggedPiece({\n      piece,\n      fromRow: row,\n      fromCol: col,\n      displayRow,\n      displayCol\n    });\n    setDragOffset({\n      x: clientX - rect.left - rect.width / 2,\n      y: clientY - rect.top - rect.height / 2\n    });\n    setSelectedSquare([row, col]);\n  };\n\n  const handleTouchStart = (e, displayRow, displayCol) => {\n    e.preventDefault(); // Prevent scrolling\n    handleMouseDown(e, displayRow, displayCol);\n  };\n\n  const handleMouseMove = (e) => {\n    if (!draggedPiece) return;\n    e.preventDefault();\n  };\n\n  const handleTouchMove = (e) => {\n    if (!draggedPiece) return;\n    e.preventDefault(); // Prevent scrolling\n    handleMouseMove(e);\n  };\n\n  const handleMouseUp = (e, targetDisplayRow, targetDisplayCol) => {\n    if (!draggedPiece) return;\n    e.preventDefault();\n\n    // Convert target display coordinates to actual board coordinates\n    let targetRow, targetCol;\n    if (trainingMode && openingDatabases[trainingMode]?.color === 'black') {\n      targetRow = 7 - targetDisplayRow;\n      targetCol = 7 - targetDisplayCol;\n    } else {\n      targetRow = targetDisplayRow;\n      targetCol = targetDisplayCol;\n    }\n\n    const { fromRow, fromCol } = draggedPiece;\n\n    if (isValidMove(fromRow, fromCol, targetRow, targetCol, draggedPiece.piece)) {\n      const { moveNotation, updatedMoveHistory } = makeMove(fromRow, fromCol, targetRow, targetCol);\n      checkMove(moveNotation, updatedMoveHistory);\n    }\n\n    setDraggedPiece(null);\n    setSelectedSquare(null);\n  };\n\n  const handleTouchEnd = (e, targetDisplayRow, targetDisplayCol) => {\n    if (!draggedPiece) return;\n    e.preventDefault();\n\n    // For touch, we need to find what element we're over\n    if (e.changedTouches && e.changedTouches[0]) {\n      const touch = e.changedTouches[0];\n      const elementBelow = document.elementFromPoint(touch.clientX, touch.clientY);\n\n      // Find the chess square element\n      let targetElement = elementBelow;\n      while (targetElement && !targetElement.dataset?.square) {\n        targetElement = targetElement.parentElement;\n      }\n\n      if (targetElement && targetElement.dataset?.square) {\n        const [touchRow, touchCol] = targetElement.dataset.square.split(',').map(Number);\n        handleMouseUp(e, touchRow, touchCol);\n        return;\n      }\n    }\n\n    // Fallback to provided coordinates\n    handleMouseUp(e, targetDisplayRow, targetDisplayCol);\n  };\n\n  const handleSquareClick = (displayRow, displayCol) => {\n    if (draggedPiece) return; // Ignore clicks during drag\n\n    if (gameMode !== 'training') return;\n\n    // Convert display coordinates to actual board coordinates\n    let row, col;\n    if (trainingMode && openingDatabases[trainingMode]?.color === 'black') {\n      row = 7 - displayRow;\n      col = 7 - displayCol;\n    } else {\n      row = displayRow;\n      col = displayCol;\n    }\n\n    const opening = openingDatabases[trainingMode];\n    const piece = board[row][col];\n\n    // Check if it's the user's turn\n    const isUserTurn = (opening.color === 'white' && currentPlayer === 'white') ||\n                       (opening.color === 'black' && currentPlayer === 'black');\n\n    if (!isUserTurn) {\n      setFeedback('Wait for opponent to move...');\n      addTimeout(() => setFeedback(''), 1000);\n      return;\n    }\n\n    if (selectedSquare) {\n      const [fromRow, fromCol] = selectedSquare;\n      const fromPiece = board[fromRow][fromCol];\n\n      if (row === fromRow && col === fromCol) {\n        setSelectedSquare(null);\n        return;\n      }\n\n      if (isValidMove(fromRow, fromCol, row, col, fromPiece)) {\n        const { moveNotation, updatedMoveHistory } = makeMove(fromRow, fromCol, row, col);\n        checkMove(moveNotation, updatedMoveHistory);\n        setSelectedSquare(null);\n      } else {\n        setSelectedSquare(piece && isPieceWhite(piece) === (currentPlayer === 'white') ? [row, col] : null);\n      }\n    } else {\n      if (piece && isPieceWhite(piece) === (currentPlayer === 'white')) {\n        setSelectedSquare([row, col]);\n      }\n    }\n  };\n\n  const startTraining = (mode) => {\n    console.log('Starting training for mode:', mode);\n\n    // Clear any existing timeouts\n    clearAllTimeouts();\n\n    const freshBoard = getInitialBoard();\n    console.log('Starting with fresh board:', freshBoard);\n\n    // Reset all state immediately\n    setTrainingMode(mode);\n    setGameMode('training');\n    setBoard(freshBoard);\n    setMoveHistory([]);\n    setSelectedSquare(null);\n    setFeedback('');\n    setScore({ correct: 0, total: 0 });\n    setDraggedPiece(null);\n    setShowHint(null);\n    setNeedsReplay(false);\n    setUndoStack([]);\n\n    // Set the correct starting player based on opening\n    const opening = openingDatabases[mode];\n    if (opening.color === 'black') {\n      // If training as black, white moves first\n      console.log('Training as black - white will move first');\n      setCurrentPlayer('white');\n      setFeedback('White is making the first move...');\n\n      // Make the first white move automatically after a short delay\n      addTimeout(() => {\n        console.log('Making automatic first white move');\n        const firstMove = opening.moves[\"\"][0]; // Should be \"e2-e4\"\n        console.log('First move from database:', firstMove);\n\n        if (firstMove) {\n          const [fromSquare, toSquare] = firstMove.split('-');\n          const [fromRow, fromCol] = parseSquareName(fromSquare);\n          const [toRow, toCol] = parseSquareName(toSquare);\n\n          console.log(`Making first move: ${fromSquare} to ${toSquare}`);\n\n          // Make the move directly to avoid state timing issues\n          setBoard(currentBoard => {\n            const newBoard = currentBoard.map(row => [...row]);\n            const piece = newBoard[fromRow][fromCol];\n            newBoard[toRow][toCol] = piece;\n            newBoard[fromRow][fromCol] = null;\n            return newBoard;\n          });\n\n          setMoveHistory([`${fromSquare}-${toSquare}`]);\n          setCurrentPlayer('black');\n          setFeedback('Your turn! Play 1...c5 for the Sicilian Defense.');\n        }\n      }, 1000);\n    } else {\n      // If training as white, user moves first\n      console.log('Training as white - you move first');\n      setCurrentPlayer('white');\n      setFeedback('Your turn! Make your opening move.');\n    }\n  };\n\n  const resetGame = () => {\n    console.log('Resetting game');\n\n    // Clear all pending timeouts first\n    clearAllTimeouts();\n\n    // Force immediate state reset with fresh board\n    const freshBoard = getInitialBoard();\n    console.log('Resetting board to:', freshBoard);\n\n    // Reset all state at once\n    setBoard(freshBoard);\n    setMoveHistory([]);\n    setSelectedSquare(null);\n    setFeedback('');\n    setDraggedPiece(null);\n    setShowHint(null);\n    setNeedsReplay(false);\n    setUndoStack([]);\n    setScore({ correct: 0, total: 0 });\n\n    // Restart the training mode\n    const opening = openingDatabases[trainingMode];\n    if (opening.color === 'black') {\n      setCurrentPlayer('white');\n      setFeedback('White is making the first move...');\n\n      // Make the first white move automatically after reset\n      addTimeout(() => {\n        const firstMove = opening.moves[\"\"][0]; // Should be \"e2-e4\"\n\n        if (firstMove) {\n          const [fromSquare, toSquare] = firstMove.split('-');\n          const [fromRow, fromCol] = parseSquareName(fromSquare);\n          const [toRow, toCol] = parseSquareName(toSquare);\n\n          console.log(`Reset: Making first move ${fromSquare} to ${toSquare}`);\n\n          // Make the move directly without using makeMove to avoid moveHistory issues\n          setBoard(currentBoard => {\n            const newBoard = currentBoard.map(row => [...row]);\n            const piece = newBoard[fromRow][fromCol];\n            newBoard[toRow][toCol] = piece;\n            newBoard[fromRow][fromCol] = null;\n            return newBoard;\n          });\n\n          setMoveHistory([`${fromSquare}-${toSquare}`]);\n          setCurrentPlayer('black');\n          setFeedback('Your turn! Play 1...c5 for the Sicilian Defense.');\n        }\n      }, 1000);\n    } else {\n      setCurrentPlayer('white');\n      setFeedback('Your turn! Make your opening move.');\n    }\n  };\n\n  const backToMenu = () => {\n    clearAllTimeouts();\n    setGameMode('menu');\n    setTrainingMode(null);\n    setBoard(getInitialBoard()); // Reset board when going back to menu\n    setMoveHistory([]);\n    setScore({ correct: 0, total: 0 });\n    setUndoStack([]);\n  };\n\n  // Handle global mouse events for drag and drop\n  useEffect(() => {\n    const handleGlobalMouseMove = (e) => {\n      if (draggedPiece) {\n        const clientX = e.clientX || (e.touches && e.touches[0]?.clientX) || 0;\n        const clientY = e.clientY || (e.touches && e.touches[0]?.clientY) || 0;\n        setDragOffset({\n          x: clientX,\n          y: clientY\n        });\n      }\n    };\n\n    const handleGlobalTouchMove = (e) => {\n      if (draggedPiece && e.touches && e.touches[0]) {\n        e.preventDefault(); // Prevent scrolling while dragging\n        setDragOffset({\n          x: e.touches[0].clientX,\n          y: e.touches[0].clientY\n        });\n      }\n    };\n\n    const handleGlobalMouseUp = () => {\n      if (draggedPiece) {\n        setDraggedPiece(null);\n        setSelectedSquare(null);\n      }\n    };\n\n    const handleGlobalTouchEnd = () => {\n      if (draggedPiece) {\n        setDraggedPiece(null);\n        setSelectedSquare(null);\n      }\n    };\n\n    // Mouse events\n    document.addEventListener('mousemove', handleGlobalMouseMove);\n    document.addEventListener('mouseup', handleGlobalMouseUp);\n\n    // Touch events\n    document.addEventListener('touchmove', handleGlobalTouchMove, { passive: false });\n    document.addEventListener('touchend', handleGlobalTouchEnd);\n\n    return () => {\n      document.removeEventListener('mousemove', handleGlobalMouseMove);\n      document.removeEventListener('mouseup', handleGlobalMouseUp);\n      document.removeEventListener('touchmove', handleGlobalTouchMove);\n      document.removeEventListener('touchend', handleGlobalTouchEnd);\n    };\n  }, [draggedPiece]);\n\n  // Cleanup timeouts on unmount\n  useEffect(() => {\n    return () => {\n      clearAllTimeouts();\n    };\n  }, []);\n\n  // Styles\n  const styles = {\n    container: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #fef7cd 0%, #fed7aa 100%)',\n      padding: '20px',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", sans-serif'\n    },\n    wrapper: {\n      maxWidth: '1200px',\n      margin: '0 auto'\n    },\n    header: {\n      textAlign: 'center',\n      marginBottom: '40px'\n    },\n    title: {\n      fontSize: '2.5rem',\n      color: '#92400e',\n      marginBottom: '10px',\n      fontWeight: 'bold'\n    },\n    subtitle: {\n      color: '#a16207',\n      fontSize: '1.1rem'\n    },\n    grid: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\n      gap: '30px',\n      marginBottom: '40px'\n    },\n    card: {\n      background: 'white',\n      borderRadius: '12px',\n      padding: '30px',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      cursor: 'pointer',\n      transition: 'transform 0.2s'\n    },\n    cardHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      marginBottom: '20px',\n      fontSize: '1.5rem',\n      fontWeight: '600'\n    },\n    cardText: {\n      color: '#6b7280',\n      marginBottom: '20px',\n      lineHeight: '1.6'\n    },\n    button: {\n      width: '100%',\n      padding: '12px 20px',\n      border: 'none',\n      borderRadius: '8px',\n      fontWeight: '600',\n      fontSize: '1rem',\n      cursor: 'pointer',\n      color: 'white'\n    },\n    gameHeader: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: '30px',\n      flexWrap: 'wrap',\n      gap: '20px'\n    },\n    navButton: {\n      display: 'flex',\n      alignItems: 'center',\n      background: 'none',\n      border: 'none',\n      color: '#a16207',\n      fontSize: '1rem',\n      cursor: 'pointer'\n    },\n    gameTitle: {\n      textAlign: 'center'\n    },\n    gameLayout: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      gap: '30px',\n      flexWrap: 'wrap'\n    },\n    boardContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: '10px'\n    },\n    boardWrapper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      position: 'relative'\n    },\n    coordinatesContainer: {\n      display: 'grid',\n      gridTemplateColumns: '30px repeat(8, 1fr) 30px',\n      gridTemplateRows: '30px repeat(8, 1fr) 30px',\n      width: isMobile ? '410px' : '560px',\n      height: isMobile ? '410px' : '560px',\n      fontSize: '14px',\n      fontWeight: '600',\n      color: '#8B4513'\n    },\n    board: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(8, 1fr)',\n      gridTemplateRows: 'repeat(8, 1fr)',\n      width: isMobile ? '350px' : '500px',\n      height: isMobile ? '350px' : '500px',\n      border: '3px solid #8B4513',\n      borderRadius: '4px',\n      overflow: 'hidden',\n      boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)',\n      gridColumn: '2 / 10',\n      gridRow: '2 / 10',\n      position: 'relative'\n    },\n    square: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontSize: isMobile ? '2.8rem' : '3.8rem',\n      cursor: 'pointer',\n      transition: 'background-color 0.15s ease, border 0.15s ease',\n      userSelect: 'none',\n      fontWeight: 'bold',\n      width: '100%',\n      height: '100%',\n      minWidth: 0,\n      minHeight: 0,\n      boxSizing: 'border-box'\n    },\n    sidebar: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '20px',\n      width: isMobile ? '100%' : '350px',\n      maxWidth: '500px'\n    },\n    infoCard: {\n      background: 'white',\n      borderRadius: '12px',\n      padding: '20px',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\n    },\n    infoTitle: {\n      fontSize: '1.2rem',\n      fontWeight: '600',\n      marginBottom: '15px',\n      color: '#374151'\n    }\n  };\n\n  if (gameMode === 'menu') {\n    return (\n      <div style={styles.container}>\n        <div style={styles.wrapper}>\n          <div style={styles.header}>\n            <h1 style={styles.title}>Chess Opening Trainer</h1>\n            <p style={styles.subtitle}>Master your favorite openings against AI opposition</p>\n          </div>\n\n          <div style={styles.grid}>\n            <div style={styles.card} onClick={() => startTraining('sicilianDragon')}>\n              <div style={{...styles.cardHeader, color: '#dc2626'}}>\n                <Target size={24} />\n                <h2 style={{marginLeft: '10px'}}>Sicilian Dragon</h2>\n              </div>\n              <p style={styles.cardText}>Practice the Accelerated Dragon as Black. White moves automatically - you learn the best responses!</p>\n              <button style={{...styles.button, backgroundColor: '#dc2626'}}>\n                Train as Black\n              </button>\n            </div>\n\n            <div style={styles.card} onClick={() => startTraining('scotchGame')}>\n              <div style={{...styles.cardHeader, color: '#2563eb'}}>\n                <BookOpen size={24} />\n                <h2 style={{marginLeft: '10px'}}>Scotch Game</h2>\n              </div>\n              <p style={styles.cardText}>Learn the Scotch Game as White. Black moves automatically - focus on mastering your attacking lines!</p>\n              <button style={{...styles.button, backgroundColor: '#2563eb'}}>\n                Train as White\n              </button>\n            </div>\n\n            <div style={styles.card} onClick={() => startTraining('scotchGambit')}>\n              <div style={{...styles.cardHeader, color: '#16a34a'}}>\n                <Play size={24} />\n                <h2 style={{marginLeft: '10px'}}>Scotch Gambit</h2>\n              </div>\n              <p style={styles.cardText}>Master the Scotch Gambit as White. Black responds automatically - learn the aggressive sacrificial lines!</p>\n              <button style={{...styles.button, backgroundColor: '#16a34a'}}>\n                Train as White\n              </button>\n            </div>\n          </div>\n\n          <div style={{background: 'white', borderRadius: '12px', padding: '30px', boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'}}>\n            <h3 style={{fontSize: '1.5rem', marginBottom: '20px', color: '#374151'}}>How it works</h3>\n            <div style={{display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '20px'}}>\n              <div>\n                <h4 style={{fontWeight: '600', marginBottom: '10px', color: '#374151'}}>🎯 Focus on Your Side</h4>\n                <p style={{color: '#6b7280', fontSize: '0.9rem', lineHeight: '1.5'}}>The opponent moves automatically based on opening theory. You only need to learn your moves!</p>\n              </div>\n              <div>\n                <h4 style={{fontWeight: '600', marginBottom: '10px', color: '#374151'}}>🤖 Smart AI Responses</h4>\n                <p style={{color: '#6b7280', fontSize: '0.9rem', lineHeight: '1.5'}}>AI plays realistic variations from grandmaster games. Learn to handle different responses.</p>\n              </div>\n              <div>\n                <h4 style={{fontWeight: '600', marginBottom: '10px', color: '#374151'}}>📈 Immediate Feedback</h4>\n                <p style={{color: '#6b7280', fontSize: '0.9rem', lineHeight: '1.5'}}>Get instant feedback on your moves. Make a mistake? Just click \"Undo\" to try again!</p>\n              </div>\n            </div>\n            <div style={{marginTop: '20px', padding: '15px', backgroundColor: '#f0f9ff', borderRadius: '8px', border: '1px solid #0ea5e9'}}>\n              <p style={{color: '#0c4a6e', fontSize: '0.9rem', textAlign: 'center'}}>\n                <strong>💡 Tip:</strong> Wait for the opponent to move automatically, then make your best move. The AI will show you when it's your turn!\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const opening = openingDatabases[trainingMode];\n\n  return (\n    <div style={styles.container}>\n      <div style={styles.wrapper}>\n        <div style={styles.gameHeader}>\n          <button style={styles.navButton} onClick={backToMenu}>\n            <ChevronLeft size={20} style={{marginRight: '5px'}} />\n            Back to Menu\n          </button>\n\n          <div style={styles.gameTitle}>\n            <h2 style={{fontSize: '2rem', color: '#92400e', marginBottom: '5px'}}>\n              {opening.name}\n            </h2>\n            <p style={{color: '#a16207'}}>Playing as {opening.color}</p>\n          </div>\n\n          <div style={{display: 'flex', gap: '15px'}}>\n            <button\n              style={{\n                ...styles.navButton,\n                opacity: undoStack.length > 0 ? 1 : 0.5,\n                cursor: undoStack.length > 0 ? 'pointer' : 'not-allowed'\n              }}\n              onClick={undoStack.length > 0 ? undoLastMove : undefined}\n              disabled={undoStack.length === 0}\n            >\n              <Undo2 size={20} style={{marginRight: '5px'}} />\n              Undo\n            </button>\n\n            <button style={styles.navButton} onClick={resetGame}>\n              <RotateCcw size={20} style={{marginRight: '5px'}} />\n              Reset\n            </button>\n          </div>\n        </div>\n\n        <div style={styles.gameLayout}>\n          <div style={styles.boardContainer}>\n            <div style={styles.boardWrapper}>\n              {/* Board orientation indicator */}\n              {trainingMode && (\n                <div style={{\n                  marginBottom: '10px',\n                  textAlign: 'center',\n                  color: needsReplay ? '#dc2626' : '#a16207',\n                  fontSize: '0.9rem',\n                  fontWeight: '600',\n                  padding: needsReplay ? '8px 16px' : '0',\n                  backgroundColor: needsReplay ? '#fef2f2' : 'transparent',\n                  borderRadius: needsReplay ? '8px' : '0',\n                  border: needsReplay ? '2px solid #dc2626' : 'none'\n                }}>\n                  {needsReplay ? '⚠️ Wrong move! Follow the yellow arrow to make the correct move.' :\n                   (openingDatabases[trainingMode].color === 'black'\n                    ? '♟ Playing as Black (Black pieces at bottom)'\n                    : '♙ Playing as White (White pieces at bottom)'\n                  )}\n                </div>\n              )}\n\n              {/* Board with coordinates */}\n              <div style={styles.coordinatesContainer}>\n                {/* Top file letters */}\n                {Array.from({length: 8}, (_, i) => {\n                  const file = trainingMode && openingDatabases[trainingMode]?.color === 'black'\n                    ? String.fromCharCode(104 - i) // h,g,f,e,d,c,b,a\n                    : String.fromCharCode(97 + i);  // a,b,c,d,e,f,g,h\n                  return (\n                    <div key={`top-${i}`} style={{\n                      gridColumn: i + 2,\n                      gridRow: 1,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center'\n                    }}>\n                      {file}\n                    </div>\n                  );\n                })}\n\n                {/* Left rank numbers */}\n                {Array.from({length: 8}, (_, i) => {\n                  const rank = trainingMode && openingDatabases[trainingMode]?.color === 'black' ? i + 1 : 8 - i;\n                  return (\n                    <div key={`left-${i}`} style={{\n                      gridColumn: 1,\n                      gridRow: i + 2,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center'\n                    }}>\n                      {rank}\n                    </div>\n                  );\n                })}\n\n                {/* The chess board */}\n                <div style={styles.board} onMouseMove={handleMouseMove} onTouchMove={handleTouchMove}>\n                  {board.flatMap((row, rowIndex) =>\n                    row.map((piece, colIndex) => {\n                      // Get display coordinates (potentially flipped)\n                      const [displayRow, displayCol] = getDisplayCoordinates(rowIndex, colIndex);\n                      const isLightSquare = (displayRow + displayCol) % 2 === 0;\n                      const isSelected = selectedSquare && selectedSquare[0] === rowIndex && selectedSquare[1] === colIndex;\n                      const isDragging = draggedPiece && draggedPiece.fromRow === rowIndex && draggedPiece.fromCol === colIndex;\n\n                      // Chess.com style colors\n                      let backgroundColor;\n                      if (isSelected) {\n                        backgroundColor = '#f7dc6f'; // Yellow highlight for selected\n                      } else {\n                        backgroundColor = isLightSquare ? '#f0d9b5' : '#b58863'; // Chess.com colors\n                      }\n\n                      return (\n                        <div\n                          key={`${rowIndex}-${colIndex}`}\n                          data-square={`${displayRow},${displayCol}`}\n                          style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            fontSize: isMobile ? '2.2rem' : '2.8rem',\n                            cursor: piece ? 'pointer' : 'default',\n                            transition: 'background-color 0.15s ease, border 0.15s ease',\n                            userSelect: 'none',\n                            fontWeight: 'bold',\n                            width: '100%',\n                            height: '100%',\n                            minWidth: 0,\n                            minHeight: 0,\n                            boxSizing: 'border-box',\n                            backgroundColor,\n                            border: isSelected ? '2px solid #f39c12' : 'none',\n                            // Position this square at its display coordinates\n                            gridColumn: displayCol + 1,\n                            gridRow: displayRow + 1,\n                            opacity: isDragging ? 0.3 : 1,\n                            // Mobile optimization\n                            WebkitTouchCallout: 'none',\n                            WebkitUserSelect: 'none',\n                            touchAction: 'none'\n                          }}\n                          onMouseDown={(e) => handleMouseDown(e, displayRow, displayCol)}\n                          onMouseUp={(e) => handleMouseUp(e, displayRow, displayCol)}\n                          onTouchStart={(e) => handleTouchStart(e, displayRow, displayCol)}\n                          onTouchEnd={(e) => handleTouchEnd(e, displayRow, displayCol)}\n                          onClick={() => handleSquareClick(displayRow, displayCol)}\n                          onTouchCancel={() => {\n                            setDraggedPiece(null);\n                            setSelectedSquare(null);\n                          }}\n                          onMouseEnter={(e) => {\n                            if (!isSelected && !draggedPiece) {\n                              e.target.style.backgroundColor = isLightSquare ? '#ead5aa' : '#a67c52';\n                            }\n                          }}\n                          onMouseLeave={(e) => {\n                            if (!isSelected && !draggedPiece) {\n                              e.target.style.backgroundColor = isLightSquare ? '#f0d9b5' : '#b58863';\n                            }\n                          }}\n                        >\n                          {piece && !isDragging && (\n                            <div\n                              className={`chess-piece ${isPieceWhite(piece) ? 'chess-piece-white' : 'chess-piece-black'}`}\n                              style={{\n                                width: '80%',\n                                height: '80%',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center'\n                              }}\n                            >\n                              {(() => {\n                                console.log('Rendering piece:', piece, 'at', rowIndex, colIndex);\n                                console.log('About to call getPieceSVG...');\n                                const result = getPieceSVG(piece);\n                                console.log('getPieceSVG returned:', result);\n                                return result;\n                              })()}\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })\n                  )}\n\n                  {/* Hint Arrow */}\n                  {showHint && (\n                    <div style={{\n                      position: 'absolute',\n                      top: 0,\n                      left: 0,\n                      width: '100%',\n                      height: '100%',\n                      pointerEvents: 'none',\n                      zIndex: 10\n                    }}>\n                      <svg style={{ width: '100%', height: '100%' }}>\n                        <defs>\n                          <marker id=\"arrowhead\" markerWidth=\"10\" markerHeight=\"7\"\n                                  refX=\"9\" refY=\"3.5\" orient=\"auto\">\n                            <polygon points=\"0 0, 10 3.5, 0 7\" fill=\"#ffeb3b\" stroke=\"#f39c12\" strokeWidth=\"1\"/>\n                          </marker>\n                        </defs>\n                        <line\n                          x1={`${(showHint.from.col + 0.5) * 12.5}%`}\n                          y1={`${(showHint.from.row + 0.5) * 12.5}%`}\n                          x2={`${(showHint.to.col + 0.5) * 12.5}%`}\n                          y2={`${(showHint.to.row + 0.5) * 12.5}%`}\n                          stroke=\"#ffeb3b\"\n                          strokeWidth=\"6\"\n                          markerEnd=\"url(#arrowhead)\"\n                        />\n                      </svg>\n                    </div>\n                  )}\n\n                  {/* Dragged piece */}\n                  {draggedPiece && (\n                    <div style={{\n                      position: 'fixed',\n                      pointerEvents: 'none',\n                      width: isMobile ? '44px' : '60px',\n                      height: isMobile ? '44px' : '60px',\n                      zIndex: 1000,\n                      left: `${dragOffset.x}px`,\n                      top: `${dragOffset.y}px`,\n                      transform: 'translate(-50%, -50%)'\n                    }}>\n                      <div\n                        className={`chess-piece ${isPieceWhite(draggedPiece.piece) ? 'chess-piece-white' : 'chess-piece-black'}`}\n                        style={{\n                          width: '100%',\n                          height: '100%',\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center'\n                        }}\n                      >\n                        {getPieceSVG(draggedPiece.piece)}\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                {/* Right rank numbers */}\n                {Array.from({length: 8}, (_, i) => {\n                  const rank = trainingMode && openingDatabases[trainingMode]?.color === 'black' ? i + 1 : 8 - i;\n                  return (\n                    <div key={`right-${i}`} style={{\n                      gridColumn: 10,\n                      gridRow: i + 2,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center'\n                    }}>\n                      {rank}\n                    </div>\n                  );\n                })}\n\n                {/* Bottom file letters */}\n                {Array.from({length: 8}, (_, i) => {\n                  const file = trainingMode && openingDatabases[trainingMode]?.color === 'black'\n                    ? String.fromCharCode(104 - i) // h,g,f,e,d,c,b,a\n                    : String.fromCharCode(97 + i);  // a,b,c,d,e,f,g,h\n                  return (\n                    <div key={`bottom-${i}`} style={{\n                      gridColumn: i + 2,\n                      gridRow: 10,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center'\n                    }}>\n                      {file}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n\n          <div style={styles.sidebar}>\n            <div style={styles.infoCard}>\n              <h3 style={styles.infoTitle}>Game Status</h3>\n              <p style={{marginBottom: '8px', color: '#6b7280'}}>\n                Current turn: <span style={{textTransform: 'capitalize', fontWeight: '600', color: '#374151'}}>{currentPlayer}</span>\n              </p>\n              <p style={{color: '#6b7280'}}>Move: {Math.ceil(moveHistory.length / 2)}</p>\n              <p style={{marginTop: '8px', fontWeight: '600', color:\n                ((opening.color === 'white' && currentPlayer === 'white') ||\n                 (opening.color === 'black' && currentPlayer === 'black')) ? '#16a34a' : '#ea580c'\n              }}>\n                {((opening.color === 'white' && currentPlayer === 'white') ||\n                  (opening.color === 'black' && currentPlayer === 'black')) ? 'Your turn!' : 'Opponent thinking...'}\n              </p>\n            </div>\n\n            <div style={styles.infoCard}>\n              <h3 style={styles.infoTitle}>Score</h3>\n              <p style={{fontSize: '1.5rem', fontWeight: 'bold', color: '#374151', marginBottom: '8px'}}>\n                {score.correct}/{score.total}\n              </p>\n              <p style={{fontSize: '0.9rem', color: '#6b7280'}}>\n                {score.total > 0 ? `${Math.round((score.correct / score.total) * 100)}% accuracy` : 'No moves yet'}\n              </p>\n            </div>\n\n            {feedback && (\n              <div style={{\n                borderRadius: '12px',\n                padding: '20px',\n                fontWeight: '600',\n                backgroundColor: feedback.includes('✓') ? '#dcfce7' : feedback.includes('✗') ? '#fef2f2' : '#f0f9ff',\n                color: feedback.includes('✓') ? '#166534' : feedback.includes('✗') ? '#991b1b' : '#1e40af',\n                border: feedback.includes('✓') ? '2px solid #22c55e' : feedback.includes('✗') ? '2px solid #ef4444' : '2px solid #3b82f6',\n                transform: feedback.includes('✗') ? 'scale(1.02)' : 'scale(1)',\n                transition: 'all 0.3s ease'\n              }}>\n                <p style={{ margin: 0 }}>{feedback}</p>\n                {showHint && (\n                  <div style={{ marginTop: '15px', display: 'flex', flexDirection: 'column', gap: '10px' }}>\n                    <p style={{\n                      margin: 0,\n                      fontSize: '0.9rem',\n                      color: '#b45309',\n                      backgroundColor: '#fef3c7',\n                      padding: '8px 12px',\n                      borderRadius: '6px',\n                      border: '1px solid #fbbf24'\n                    }}>\n                      💡 Hint: Move from {showHint.notation.split('-')[0]} to {showHint.notation.split('-')[1]}\n                    </p>\n                    {undoStack.length > 0 && (\n                      <button\n                        style={{\n                          padding: '8px 16px',\n                          backgroundColor: '#3b82f6',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '6px',\n                          cursor: 'pointer',\n                          fontSize: '0.9rem',\n                          fontWeight: '600',\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          gap: '5px'\n                        }}\n                        onClick={undoLastMove}\n                      >\n                        <Undo2 size={16} />\n                        Try Again\n                      </button>\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n\n            <div style={styles.infoCard}>\n              <h3 style={styles.infoTitle}>Move History</h3>\n              <div style={{maxHeight: '200px', overflowY: 'auto', fontSize: '0.9rem'}}>\n                {moveHistory.length === 0 ? (\n                  <p style={{color: '#9ca3af', fontStyle: 'italic'}}>No moves yet</p>\n                ) : (\n                  moveHistory.map((move, index) => (\n                    <div key={index} style={{display: 'flex', marginBottom: '4px'}}>\n                      <span style={{width: '30px', color: '#9ca3af'}}>{Math.ceil((index + 1) / 2)}.</span>\n                      <span style={{color: index % 2 === 0 ? '#374151' : '#6b7280'}}>\n                        {move}\n                      </span>\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChessTrainingApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}